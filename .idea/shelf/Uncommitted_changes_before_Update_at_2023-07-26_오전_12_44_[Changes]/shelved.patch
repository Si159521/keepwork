Index: app/src/main/java/com/example/a23_hf069/ResumeChangeActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.a23_hf069\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.os.Bundle\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.widget.Button\r\nimport android.widget.EditText\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport okhttp3.*\r\nimport java.io.IOException\r\n\r\nclass ResumeChangeActivity : AppCompatActivity() {\r\n    private var IP_ADDRESS = \"15.165.160.71\" // Replace with your IP address.\r\n    private var userId: String = \"\" // User ID\r\n    private var resumeListNum: Int = -1\r\n    private lateinit var editResumeTitle: EditText\r\n    private lateinit var editTextAcademic: EditText\r\n    private lateinit var editTextCareer: EditText\r\n    private lateinit var editTextIntroduction: EditText\r\n    private lateinit var editTextCertificate: EditText\r\n    private lateinit var editTextEducation: EditText\r\n    private lateinit var editTextDesire: EditText\r\n    private lateinit var buttonSubmit1: Button\r\n    private lateinit var buttonSubmit2: Button\r\n\r\n    @SuppressLint(\"MissingInflatedId\")\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_resume_change)\r\n\r\n// Get user ID\r\n        resumeListNum = intent.getIntExtra(\"resumeListNum\", -1)\r\n        userId = intent.getStringExtra(\"userId\") ?: \"\"\r\n\r\n        val textID = findViewById<TextView>(R.id.tvchID)\r\n        textID.text = userId\r\n\r\n        editTextAcademic = findViewById(R.id.edtchAcademic)\r\n        editResumeTitle = findViewById(R.id.edtchTitle)\r\n        editTextCareer = findViewById(R.id.edtchCareer)\r\n        editTextIntroduction = findViewById(R.id.edtchIntroduction)\r\n        editTextCertificate = findViewById(R.id.edtchCertificate)\r\n        editTextEducation = findViewById(R.id.edtchEducation)\r\n        editTextDesire = findViewById(R.id.edtchDesire)\r\n        buttonSubmit1 = findViewById(R.id.buttonchSubmit_temporary)\r\n        buttonSubmit2 = findViewById(R.id.buttonchSubmit_complete)\r\n\r\n        buttonSubmit1.setOnClickListener { // 임시 저장\r\n            val personal_id = userId\r\n            val resume_title = editResumeTitle.text.toString()\r\n            val resume_academic = editTextAcademic.text.toString()\r\n            val resume_career = editTextCareer.text.toString()\r\n            val resume_introduction = editTextIntroduction.text.toString()\r\n            val resume_certificate = editTextCertificate.text.toString()\r\n            val resume_learning = editTextEducation.text.toString()\r\n            val resume_desire = editTextDesire.text.toString()\r\n            val resume_complete = \"작성 중\"\r\n\r\n            sendResumeData(\r\n                personal_id,\r\n                resume_title,\r\n                resume_academic,\r\n                resume_career,\r\n                resume_introduction,\r\n                resume_certificate,\r\n                resume_learning,\r\n                resume_desire,\r\n                resume_complete\r\n            )\r\n\r\n            Toast.makeText(this, \"이력서가 임시저장되었습니다\", Toast.LENGTH_SHORT).show()\r\n        }\r\n\r\n        buttonSubmit2.setOnClickListener { // 작성완료\r\n            val personal_id = userId\r\n            val resume_title = editResumeTitle.text.toString()\r\n            val resume_academic = editTextAcademic.text.toString()\r\n            val resume_career = editTextCareer.text.toString()\r\n            val resume_introduction = editTextIntroduction.text.toString()\r\n            val resume_certificate = editTextCertificate.text.toString()\r\n            val resume_learning = editTextEducation.text.toString()\r\n            val resume_desire = editTextDesire.text.toString()\r\n            val resume_complete = \"작성 완료\"\r\n\r\n            sendResumeData(\r\n                personal_id,\r\n                resume_title,\r\n                resume_academic,\r\n                resume_career,\r\n                resume_introduction,\r\n                resume_certificate,\r\n                resume_learning,\r\n                resume_desire,\r\n                resume_complete\r\n            )\r\n\r\n            Toast.makeText(this, \"이력서가 작성완료되었습니다\", Toast.LENGTH_SHORT).show()\r\n        }\r\n    }\r\n\r\n    private fun sendResumeData(\r\n        personal_id: String,\r\n        resume_title: String,\r\n        resume_academic: String,\r\n        resume_career: String,\r\n        resume_introduction: String,\r\n        resume_certificate: String,\r\n        resume_learning: String,\r\n        resume_desire: String,\r\n        resume_complete: String\r\n    ) {\r\n        val url = \"http://$IP_ADDRESS/android_resume_write_php.php\" // URL of the hosting server with PHP script\r\n\r\n        val client = OkHttpClient()\r\n\r\n        val formBody = FormBody.Builder()\r\n            .add(\"personal_id\", personal_id) // ID\r\n            .add(\"resume_title\", resume_title) // Title\r\n            .add(\"resume_academic\", resume_academic) // Education\r\n            .add(\"resume_career\", resume_career) // Career\r\n            .add(\"resume_introduction\", resume_introduction) // Introduction\r\n            .add(\"resume_certificate\", resume_certificate) // Certification\r\n            .add(\"resume_learning\", resume_learning) // Education history\r\n            .add(\"resume_desire\", resume_desire) // Desired job position\r\n            .add(\"resume_complete\", resume_complete)\r\n            .build()\r\n\r\n        val request = Request.Builder()\r\n            .url(url)\r\n            .post(formBody)\r\n            .build()\r\n\r\n        client.newCall(request).enqueue(object : okhttp3.Callback {\r\n            override fun onFailure(call: Call, e: IOException) {\r\n// Handle request failure\r\n                e.printStackTrace()\r\n            }\r\n\r\n            override fun onResponse(call: Call, response: Response) {\r\n// Handle request success\r\n                val responseData = response.body?.string()\r\n            }\r\n        })\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/a23_hf069/ResumeChangeActivity.kt b/app/src/main/java/com/example/a23_hf069/ResumeChangeActivity.kt
--- a/app/src/main/java/com/example/a23_hf069/ResumeChangeActivity.kt	(revision ce2b0dccf4cda2dcf5293e2f68902070ce4490fe)
+++ b/app/src/main/java/com/example/a23_hf069/ResumeChangeActivity.kt	(date 1690299845182)
@@ -8,6 +8,9 @@
 import android.widget.TextView
 import android.widget.Toast
 import okhttp3.*
+import org.json.JSONArray
+import org.json.JSONException
+import org.json.JSONObject
 import java.io.IOException
 
 class ResumeChangeActivity : AppCompatActivity() {
@@ -34,7 +37,7 @@
         userId = intent.getStringExtra("userId") ?: ""
 
         val textID = findViewById<TextView>(R.id.tvchID)
-        textID.text = userId
+        textID.text = resumeListNum.toString()
 
         editTextAcademic = findViewById(R.id.edtchAcademic)
         editResumeTitle = findViewById(R.id.edtchTitle)
@@ -97,6 +100,9 @@
 
             Toast.makeText(this, "이력서가 작성완료되었습니다", Toast.LENGTH_SHORT).show()
         }
+
+        // 이력서 아이템 데이터 불러오기
+        getResumeItemData(resumeListNum)
     }
 
     private fun sendResumeData(
@@ -143,4 +149,56 @@
             }
         })
     }
+
+    private fun getResumeItemData(resumeListNum: Int) {
+        val url = "http://$IP_ADDRESS/android_resume_change.php" // 데이터를 불러올 PHP 스크립트의 주소
+
+        val client = OkHttpClient()
+
+        val formBody = FormBody.Builder()
+            .add("resumeListNum", resumeListNum.toString()) // 이력서 아이템의 resumeListNum 값을 전달
+            .build()
+
+        val request = Request.Builder()
+            .url(url)
+            .post(formBody)
+            .build()
+
+        client.newCall(request).enqueue(object : okhttp3.Callback {
+            override fun onFailure(call: Call, e: IOException) {
+                // Handle request failure
+                e.printStackTrace()
+            }
+
+            override fun onResponse(call: Call, response: Response) {
+                val responseData = response.body?.string()
+                // 이력서 아이템 데이터를 파싱하여 UI 업데이트
+                runOnUiThread {
+                    handleResumeItemData(responseData)
+                }
+            }
+        })
+    }
+
+    // 이력서 아이템 데이터를 처리하는 함수 추가
+    private fun handleResumeItemData(responseData: String?) {
+        try {
+            val jsonArray = JSONArray(responseData) // JSONArray로 파싱
+            if (jsonArray.length() > 0) {
+                val resumeItemData = jsonArray.getJSONObject(0) // 첫 번째 JSONObject를 가져옴
+                // 여기서 이력서 아이템 데이터를 파싱하여 UI에 표시하는 작업을 수행하면 됩니다.
+                // 예를 들어, 다음과 같이 각 EditText에 데이터를 설정할 수 있습니다.
+                editResumeTitle.setText(resumeItemData.optString("resumeTitle", ""))
+                editTextAcademic.setText(resumeItemData.optString("resumeAcademic", ""))
+                editTextCareer.setText(resumeItemData.optString("resumeCareer", ""))
+                editTextIntroduction.setText(resumeItemData.optString("resumeIntroduction", ""))
+                editTextCertificate.setText(resumeItemData.optString("resumeCertificate", ""))
+                editTextEducation.setText(resumeItemData.optString("resumeLearning", ""))
+                editTextDesire.setText(resumeItemData.optString("resumeDesire", ""))
+            }
+        } catch (e: JSONException) {
+            // JSON 파싱 오류 처리
+            e.printStackTrace()
+        }
+    }
 }
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" project-jdk-name=\"17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision ce2b0dccf4cda2dcf5293e2f68902070ce4490fe)
+++ b/.idea/misc.xml	(date 1690296814206)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" project-jdk-name="17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
 </project>
\ No newline at end of file
