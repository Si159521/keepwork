Index: app/src/main/java/com/example/a23_hf069/ResumeFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.a23_hf069\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Button\r\nimport android.widget.TextView\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport okhttp3.*\r\nimport org.json.JSONArray\r\nimport org.json.JSONException\r\nimport java.io.IOException\r\n\r\nclass ResumeFragment : Fragment() {\r\n    private var IP_ADDRESS = \"54.180.82.123\" // 본인 IP주소를 넣으세요.\r\n    private lateinit var userId: String // 사용자 아이디\r\n\r\n    private lateinit var buttonSubmit: Button\r\n    private lateinit var recyclerView: RecyclerView\r\n    private lateinit var dataAdapter: DataAdapter\r\n    private val dataList: MutableList<Data> = mutableListOf()  // DB에서 가져온 데이터 리스트\r\n\r\n    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {\r\n        val view = inflater.inflate(R.layout.fragment_resume, container, false)\r\n\r\n        // 사용자 아이디 받아오기\r\n        if (arguments != null) {\r\n            userId = arguments?.getString(\"userId\", \"\") ?: \"\"\r\n        }\r\n\r\n        val textID = view.findViewById<TextView>(R.id.tvID1)\r\n        textID.text = userId\r\n\r\n        // RecyclerView 초기화\r\n        recyclerView = view.findViewById(R.id.recyclerviewResume)\r\n        recyclerView.layoutManager = LinearLayoutManager(requireContext())\r\n        dataAdapter = DataAdapter(dataList)\r\n        recyclerView.adapter = dataAdapter\r\n\r\n        // PHP 파일 URL\r\n        val phpUrl = \"http://$IP_ADDRESS/android_resume_php.php\"\r\n\r\n        // HTTP 요청 보내기\r\n        val request = Request.Builder()\r\n            .url(phpUrl)\r\n            .build()\r\n\r\n        val client = OkHttpClient()\r\n        client.newCall(request).enqueue(object : Callback {\r\n            override fun onResponse(call: Call, response: Response) {\r\n                val responseData = response.body?.string()\r\n                if (responseData != null) {\r\n                    // 응답 데이터 처리\r\n                    handleResponseData(responseData)\r\n                }\r\n            }\r\n\r\n            override fun onFailure(call: Call, e: IOException) {\r\n                // 요청 실패 처리\r\n                e.printStackTrace()\r\n            }\r\n        })\r\n\r\n        buttonSubmit = view.findViewById<Button>(R.id.buttonSubmit)\r\n        buttonSubmit.setOnClickListener {\r\n            val intent = Intent(requireContext(), ResumeWriteActivity::class.java)\r\n            intent.putExtra(\"userId\", userId)\r\n            startActivity(intent)\r\n        }\r\n\r\n        return view\r\n    }\r\n\r\n    private fun handleResponseData(responseData: String) {\r\n        try {\r\n            // JSON 데이터 파싱\r\n            val jsonArray = JSONArray(responseData)\r\n            for (i in 0 until jsonArray.length()) {\r\n                val jsonObject = jsonArray.getJSONObject(i)\r\n                val resumeTitle = jsonObject.getString(\"resumeTitle\")\r\n                val writeStatus = jsonObject.getString(\"writeStatus\")\r\n                val data = Data(resumeTitle, writeStatus)\r\n                dataList.add(data)\r\n            }\r\n\r\n            // RecyclerView 갱신\r\n            dataAdapter.notifyDataSetChanged()\r\n        } catch (e: JSONException) {\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n}\r\n\r\ndata class Data(val resumeTitle: String, val writeStatus: String)\r\n\r\nclass DataAdapter(private val dataList: List<Data>) :\r\n    RecyclerView.Adapter<DataAdapter.ViewHolder>() {\r\n\r\n    inner class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\r\n        val textViewTitle: TextView = itemView.findViewById(R.id.tvResumeTitle)\r\n        val textViewStatus: TextView = itemView.findViewById(R.id.tvWriteStatus)\r\n    }\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n        val view = LayoutInflater.from(parent.context)\r\n            .inflate(R.layout.resume_item, parent, false)\r\n        return ViewHolder(view)\r\n    }\r\n\r\n    override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n        val data = dataList[position]\r\n        holder.textViewTitle.text = data.resumeTitle\r\n        holder.textViewStatus.text = data.writeStatus\r\n    }\r\n\r\n    override fun getItemCount(): Int {\r\n        return dataList.size\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/a23_hf069/ResumeFragment.kt b/app/src/main/java/com/example/a23_hf069/ResumeFragment.kt
--- a/app/src/main/java/com/example/a23_hf069/ResumeFragment.kt	(revision fd535982a1c40adfc88f35a19b767f6492daa760)
+++ b/app/src/main/java/com/example/a23_hf069/ResumeFragment.kt	(date 1689778945719)
@@ -13,12 +13,12 @@
 import okhttp3.*
 import org.json.JSONArray
 import org.json.JSONException
+import org.json.JSONObject
 import java.io.IOException
 
 class ResumeFragment : Fragment() {
-    private var IP_ADDRESS = "54.180.82.123" // 본인 IP주소를 넣으세요.
+    private var IP_ADDRESS = "54.180.98.37" // 본인 IP주소를 넣으세요.
     private lateinit var userId: String // 사용자 아이디
-
     private lateinit var buttonSubmit: Button
     private lateinit var recyclerView: RecyclerView
     private lateinit var dataAdapter: DataAdapter
@@ -42,11 +42,15 @@
         recyclerView.adapter = dataAdapter
 
         // PHP 파일 URL
-        val phpUrl = "http://$IP_ADDRESS/android_resume_php.php"
+        val phpUrl = "http://$IP_ADDRESS/android_resume2.php"
 
-        // HTTP 요청 보내기
+        val requestBody = FormBody.Builder()
+            .add("personal_id", userId)
+            .build()
+
         val request = Request.Builder()
             .url(phpUrl)
+            .post(requestBody)
             .build()
 
         val client = OkHttpClient()
@@ -77,18 +81,32 @@
 
     private fun handleResponseData(responseData: String) {
         try {
-            // JSON 데이터 파싱
-            val jsonArray = JSONArray(responseData)
-            for (i in 0 until jsonArray.length()) {
-                val jsonObject = jsonArray.getJSONObject(i)
-                val resumeTitle = jsonObject.getString("resumeTitle")
-                val writeStatus = jsonObject.getString("writeStatus")
+            val jsonObject = JSONObject(responseData)
+            // cnt1_result와 cnt2_result 값 추출
+            val cnt1Result = jsonObject.getInt("cnt1_result")
+            val cnt2Result = jsonObject.getInt("cnt2_result")
+
+            // UI 업데이트를 메인 스레드에서 수행
+            requireActivity().runOnUiThread {
+                val resumeTemCnt = requireView().findViewById<TextView>(R.id.textView_resume_temporary_count)
+                val resumeComCnt = requireView().findViewById<TextView>(R.id.textView_resume_complete_count)
+                resumeTemCnt.text = cnt1Result.toString()
+                resumeComCnt.text = cnt2Result.toString()
+            }
+
+            val dataArray = jsonObject.getJSONArray("data")
+            for (i in 0 until dataArray.length()) {
+                val dataObject = dataArray.getJSONObject(i)
+                val resumeTitle = dataObject.getString("resume_title")
+                val writeStatus = dataObject.getString("resume_complete")
                 val data = Data(resumeTitle, writeStatus)
                 dataList.add(data)
             }
 
             // RecyclerView 갱신
-            dataAdapter.notifyDataSetChanged()
+            requireActivity().runOnUiThread {
+                dataAdapter.notifyDataSetChanged()
+            }
         } catch (e: JSONException) {
             e.printStackTrace()
         }
