Index: app/src/main/java/com/example/a23_hf069/CorporateSignUpActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.a23_hf069\r\n\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\n\r\nclass CorporateSignUpActivity : AppCompatActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_corporate_sign_up)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/a23_hf069/CorporateSignUpActivity.kt b/app/src/main/java/com/example/a23_hf069/CorporateSignUpActivity.kt
--- a/app/src/main/java/com/example/a23_hf069/CorporateSignUpActivity.kt	(revision 23234ed9e346b8ad484d179cb3cf766e52e29e0b)
+++ b/app/src/main/java/com/example/a23_hf069/CorporateSignUpActivity.kt	(date 1694527293197)
@@ -1,11 +1,217 @@
-package com.example.a23_hf069
-
-import androidx.appcompat.app.AppCompatActivity
-import android.os.Bundle
-
-class CorporateSignUpActivity : AppCompatActivity() {
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-        setContentView(R.layout.activity_corporate_sign_up)
-    }
-}
\ No newline at end of file
+//package com.example.a23_hf069
+//
+//import android.app.DatePickerDialog
+//import androidx.appcompat.app.AppCompatActivity
+//import android.os.Bundle
+//import android.widget.AdapterView
+//import androidx.appcompat.app.ActionBar
+//import android.app.ProgressDialog
+//import android.content.ContentValues.TAG
+//import android.content.Intent
+//import android.os.AsyncTask
+//import android.text.method.ScrollingMovementMethod
+//import android.util.Log
+//import android.view.View
+//import android.widget.Button
+//import android.widget.EditText
+//import android.widget.ImageButton
+//import android.widget.TextView
+//import android.widget.Toast
+//import okhttp3.FormBody
+//import okhttp3.OkHttpClient
+//import okhttp3.Request
+//import java.io.BufferedReader
+//import java.io.InputStream
+//import java.io.InputStreamReader
+//import java.net.HttpURLConnection
+//import java.net.URL
+//import retrofit2.Call
+//import retrofit2.Callback
+//import retrofit2.Response
+//import retrofit2.Retrofit
+//import retrofit2.converter.gson.GsonConverterFactory
+//import com.amazonaws.auth.BasicAWSCredentials
+//import com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient
+//import com.amazonaws.services.simpleemail.model.*
+//import java.util.UUID
+//import androidx.lifecycle.ViewModel
+//import kotlinx.coroutines.Dispatchers
+//import kotlinx.coroutines.GlobalScope
+//import kotlinx.coroutines.launch
+//import kotlinx.coroutines.withContext
+//import java.util.Calendar
+//
+//
+//class CorporateSignUpActivity : AppCompatActivity() {
+//
+//    private var checkID = false
+//    private var calendar = Calendar.getInstance()
+//    private var birthYear = calendar.get(Calendar.YEAR)
+//    private var birthMonth = calendar.get(Calendar.MONTH)
+//    private var birthDay = calendar.get(Calendar.DAY_OF_MONTH)
+//    lateinit var btnCalendar : Button
+//    lateinit var edtBirthYear : EditText
+//    lateinit var edtBirthMonth : EditText
+//    lateinit var edtBirthDay : EditText
+//
+//    // 뷰 요소들을 선언
+//    private lateinit var backButton: ImageButton // go back to prev page
+//    private lateinit var id_text_input_edit_text: EditText // id
+//    private lateinit var idcheck_button: Button // id duplicate check
+//    private lateinit var password_text_input_edit_text: EditText // password
+//    private lateinit var password_recheck_text_input_edit_text: EditText // password recheck
+//    private lateinit var name_textview_input_edit_text: EditText // name
+//    private lateinit var email_textview_input_edit_text: EditText // email
+//    private lateinit var phoneNumber_textview_input_edit_text: EditText // phone number
+//    private lateinit var registrationNum_textview_input_edit_text: EditText // address
+//    private lateinit var companyName_textview_input_layout: EditText // company name
+//    private lateinit var ceoName_textview_input_edit_text: EditText
+//    private lateinit var year_textview_input_edit_text: EditText
+//    private lateinit var worker_textview_input_edit_text: EditText
+//    private lateinit var companyAddress_textview_input_edit_text: EditText
+//    private lateinit var signUp_button: Button // sign up button
+//
+//    // TextView 요소인 mTextViewResult 선언
+//    private lateinit var mTextViewResult: TextView
+//
+//    private val retrofit: Retrofit = Retrofit.Builder()
+//        .baseUrl(RetrofitInterface.API_URL)
+//        .addConverterFactory(GsonConverterFactory.create())
+//        .build()
+//
+//    private val apiService: RetrofitInterface= retrofit.create(RetrofitInterface::class.java)
+//
+//    override fun onCreate(savedInstanceState: Bundle?) {
+//        super.onCreate(savedInstanceState)
+//        setContentView(R.layout.activity_corporate_sign_up)
+//
+//        // 기본 툴바 숨기기
+//        val actionBar: ActionBar? = supportActionBar
+//        if (actionBar != null) {
+//            actionBar.hide()
+//        }
+//
+//        // 각 뷰의 요소들과 레이아웃 파일에서의 아이디 연결
+//        backButton = findViewById(R.id.backButton)  // go back to prev page
+//        id_text_input_edit_text = findViewById(R.id.id_text_input_edit_text) // company id
+//        idcheck_button = findViewById(R.id.idCheck_button) // id duplicate check
+//        password_text_input_edit_text = findViewById(R.id.password_text_input_edit_text) // company password
+//        password_recheck_text_input_edit_text = findViewById(R.id.password_recheck_text_input_edit_text) // password recheck
+//        name_textview_input_edit_text = findViewById(R.id.name_textview_input_edit_text) // company name
+//        email_textview_input_edit_text = findViewById(R.id.email_textview_input_edit_text) // company email
+//        phoneNumber_textview_input_edit_text = findViewById(R.id.phoneNumber_textview_input_edit_text) // personal phone_num
+//        registrationNum_textview_input_edit_text = findViewById(R.id.registrationNum_textview_input_edit_text) // registration_num
+//        companyName_textview_input_layout = findViewById(R.id.companyName_textview_input_edit_text) // company name
+//        ceoName_textview_input_edit_text = findViewById(R.id.ceoName_textview_input_edit_text) // ceo name
+//        year_textview_input_edit_text = findViewById(R.id.year_textview_input_edit_text) // year
+//        worker_textview_input_edit_text = findViewById(R.id.worker_textview_input_edit_text) // worker
+//        companyAddress_textview_input_edit_text = findViewById(R.id.companyAddress_textview_input_edit_text) // company address
+//        signUp_button = findViewById(R.id.signUp_button)
+//
+//        // mTextViewResult를 스크롤 가능하도록 설정
+//        mTextViewResult = findViewById(R.id.textView_main_result)
+//        mTextViewResult.movementMethod = ScrollingMovementMethod()
+//
+//        // 클릭 시 현재 액티비티 종료
+//        backButton.setOnClickListener {
+//            finish()
+//        }
+//
+//        // 버튼 클릭 시 아이디 중복 확인 과정 수행
+//        idcheck_button.setOnClickListener {
+//            val id = id_text_input_edit_text.text.toString().trim()
+//
+//            // 아이디가 비어있는지 확인
+//            if (id.isEmpty()) {
+//                Toast.makeText(this@CorporateSignUpActivity, "아이디를 입력해주세요.", Toast.LENGTH_SHORT).show()
+//            } else {
+//                apiService.getCorporateData(id).enqueue(object : Callback<List<C_MemberModel>> {
+//                    override fun onResponse(call: Call<List<C_MemberModel>>, response: Response<List<C_MemberModel>>) {
+//                        if (response.isSuccessful) {
+//                            val result = response.body()
+//                            if (result != null && result.isNotEmpty()) {
+//                                var cnt = 0
+//                                for (data in result) {
+//                                    if (data.company_id == id) {
+//                                        // 아이디 중복
+//                                        cnt = 1
+//                                        id_text_input_edit_text.setText("")
+//                                        Toast.makeText(this@CorporateSignUpActivity, "이미 사용 중인 아이디입니다.", Toast.LENGTH_SHORT).show()
+//                                    }
+//                                }
+//                                if (cnt == 0) {
+//                                    Toast.makeText(this@CorporateSignUpActivity, "사용 가능한 아이디입니다.", Toast.LENGTH_SHORT).show()
+//                                    checkID = true
+//                                }
+//                            }
+//                        } else {
+//                            Toast.makeText(this@CorporateSignUpActivity, "서버 응답 오류", Toast.LENGTH_SHORT).show()
+//                        }
+//                    }
+//
+//                    override fun onFailure(call: Call<List<C_MemberModel>>, t: Throwable) {
+//                        // 네트워크 오류 처리
+//                        Toast.makeText(this@CorporateSignUpActivity, "네트워크 오류", Toast.LENGTH_SHORT).show()
+//                    }
+//                })
+//            }
+//        }
+//
+//        // 버튼 클릭 시 회원가입 과정 수행
+//        signUp_button.setOnClickListener {
+//            val id = id_text_input_edit_text.text.toString().trim()
+//            val password = password_text_input_edit_text.text.toString().trim()
+//            val password_recheck = password_recheck_text_input_edit_text.text.toString().trim()
+//            val name = name_textview_input_edit_text.text.toString().trim()
+//            val email = email_textview_input_edit_text.text.toString().trim()
+//            val phonenum = phoneNumber_textview_input_edit_text.text.toString().trim()
+//            val registnum = registrationNum_textview_input_edit_text.toString().trim()
+//            val company_name = companyName_textview_input_layout.toString().trim()
+//            val ceo_name = ceoName_textview_input_edit_text.toString().trim()
+//            val company_address = companyAddress_textview_input_edit_text.toString().trim()
+//            val establishment = year_textview_input_edit_text.toString().trim()
+//            val employees = worker_textview_input_edit_text.toString().trim()
+//            val company_type = "중소기업"
+//
+//
+//            if (id.isEmpty() || password.isEmpty() || password_recheck.isEmpty() || name.isEmpty() || email.isEmpty() || phonenum.isEmpty() || registnum.isEmpty() || company_name.isEmpty() || ceo_name.isEmpty() || company_address.isEmpty() || establishment.isEmpty() || employees.isEmpty() || company_type.isEmpty()) {
+//                Toast.makeText(this@CorporateSignUpActivity, "정보를 입력해주세요.", Toast.LENGTH_SHORT).show()
+//            } else {
+//                if (password == password_recheck) {
+//                    if (password.length <= 5) {
+//                        Toast.makeText(this@CorporateSignUpActivity, "비밀번호를 6자리 이상 입력해주세요.", Toast.LENGTH_SHORT).show()
+//                    } else if (!email.contains("@")) {
+//                        Toast.makeText(this@CorporateSignUpActivity, "이메일에 @를 포함시키세요.", Toast.LENGTH_SHORT).show()
+//                    } else if (phonenum.contains("-") || !(phonenum[1] == '1')) {
+//                        Toast.makeText(this@CorporateSignUpActivity, "올바른 전화번호 형식으로 입력해주세요.", Toast.LENGTH_SHORT).show()
+//                    } else if (checkID == false) {
+//                        Toast.makeText(this@CorporateSignUpActivity, "아이디를 중복확인을 진행하세요.", Toast.LENGTH_SHORT).show()
+//                    } else {
+//                        // 사용자 데이터를 포함하는 C_MemberModel 객체를 생성합니다.
+//                        val memberModel = C_MemberModel(id, password, name, email, phonenum, registnum, company_name, ceo_name, company_address, establishment.toInt(), employees.toInt(), company_type)
+//
+//                        // Retrofit을 사용하여 서버에 사용자 데이터를 보냅니다.
+//                        apiService.postData(memberModel).enqueue(object : Callback<C_MemberModel> {
+//                            override fun onResponse(call: Call<C_MemberModel>, response: Response<C_MemberModel>) {
+//                                if (response.message().equals("Created")) {
+//                                    Toast.makeText(this@CorporateSignUpActivity, "회원가입에 성공하셨습니다.", Toast.LENGTH_SHORT).show()
+//                                    checkID = false
+//                                    finish()
+//                                } else {
+//                                    Toast.makeText(this@CorporateSignUpActivity, "회원가입 실패", Toast.LENGTH_SHORT).show()
+//                                }
+//                            }
+//
+//                            override fun onFailure(call: Call<C_MemberModel>, t: Throwable) {
+//                                // 네트워크 오류 처리
+//                                Toast.makeText(this@CorporateSignUpActivity, "네트워크 오류", Toast.LENGTH_SHORT).show()
+//                            }
+//                        })
+//                    }
+//                } else {
+//                    Toast.makeText(this@CorporateSignUpActivity, "비밀번호가 일치하지 않습니다.", Toast.LENGTH_SHORT).show()
+//                }
+//            }
+//        }
+//    }
+//}
Index: app/src/main/java/com/example/a23_hf069/PersonalSignUpActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.a23_hf069\r\n\r\nimport android.app.DatePickerDialog\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.widget.AdapterView\r\nimport androidx.appcompat.app.ActionBar\r\nimport android.app.ProgressDialog\r\nimport android.content.ContentValues.TAG\r\nimport android.content.Intent\r\nimport android.os.AsyncTask\r\nimport android.text.method.ScrollingMovementMethod\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.Button\r\nimport android.widget.EditText\r\nimport android.widget.ImageButton\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport okhttp3.FormBody\r\nimport okhttp3.OkHttpClient\r\nimport okhttp3.Request\r\nimport java.io.BufferedReader\r\nimport java.io.InputStream\r\nimport java.io.InputStreamReader\r\nimport java.net.HttpURLConnection\r\nimport java.net.URL\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport retrofit2.Retrofit\r\nimport retrofit2.converter.gson.GsonConverterFactory\r\nimport com.amazonaws.auth.BasicAWSCredentials\r\nimport com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient\r\nimport com.amazonaws.services.simpleemail.model.*\r\nimport java.util.UUID\r\nimport androidx.lifecycle.ViewModel\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.GlobalScope\r\nimport kotlinx.coroutines.launch\r\nimport kotlinx.coroutines.withContext\r\nimport java.util.Calendar\r\n\r\n\r\nclass PersonalSignUpActivity : AppCompatActivity() {\r\n\r\n    private var checkID = false\r\n    private var calendar = Calendar.getInstance()\r\n    private var birthYear = calendar.get(Calendar.YEAR)\r\n    private var birthMonth = calendar.get(Calendar.MONTH)\r\n    private var birthDay = calendar.get(Calendar.DAY_OF_MONTH)\r\n    lateinit var btnCalendar : Button\r\n    lateinit var edtBirthYear : EditText\r\n    lateinit var edtBirthMonth : EditText\r\n    lateinit var edtBirthDay : EditText\r\n\r\n    // 뷰 요소들을 선언\r\n    private lateinit var backButton: ImageButton // go back to prev page\r\n    private lateinit var id_text_input_edit_text: EditText // id\r\n    private lateinit var idcheck_button: Button // id duplicate check\r\n    private lateinit var password_text_input_edit_text: EditText // password\r\n    private lateinit var password_recheck_text_input_edit_text: EditText // password recheck\r\n    private lateinit var name_textview_input_edit_text: EditText // name\r\n    private lateinit var email_textview_input_edit_text: EditText // email\r\n    private lateinit var phoneNumber_textview_input_edit_text: EditText // phone number\r\n    private lateinit var address_textview_input_edit_text: EditText // address\r\n    private lateinit var signUp_button: Button // sign up button\r\n\r\n    // TextView 요소인 mTextViewResult 선언\r\n    private lateinit var mTextViewResult: TextView\r\n\r\n    private val retrofit: Retrofit = Retrofit.Builder()\r\n        .baseUrl(RetrofitInterface.API_URL)\r\n        .addConverterFactory(GsonConverterFactory.create())\r\n        .build()\r\n\r\n    private val apiService: RetrofitInterface= retrofit.create(RetrofitInterface::class.java)\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_individual_sign_up)\r\n\r\n        // 기본 툴바 숨기기\r\n        val actionBar: ActionBar? = supportActionBar\r\n        if (actionBar != null) {\r\n            actionBar.hide()\r\n        }\r\n\r\n        // 각 뷰의 요소들과 레이아웃 파일에서의 아이디 연결\r\n        backButton = findViewById(R.id.backButton)  // go back to prev page\r\n        id_text_input_edit_text = findViewById(R.id.id_text_input_edit_text) // personal id\r\n        idcheck_button = findViewById(R.id.idCheck_button) // id duplicate check\r\n        password_text_input_edit_text = findViewById(R.id.password_text_input_edit_text) // personal password\r\n        password_recheck_text_input_edit_text = findViewById(R.id.password_recheck_text_input_edit_text) // password recheck\r\n        name_textview_input_edit_text = findViewById(R.id.name_textview_input_edit_text) // personal name\r\n        email_textview_input_edit_text = findViewById(R.id.email_textview_input_edit_text) // personal email\r\n        phoneNumber_textview_input_edit_text = findViewById(R.id.phoneNumber_textview_input_edit_text) // personal phonenum\r\n        address_textview_input_edit_text = findViewById(R.id.address_textview_input_edit_text)\r\n\r\n        signUp_button = findViewById(R.id.signUp_button)\r\n\r\n        btnCalendar = findViewById(R.id.btn_calendar)\r\n        edtBirthYear = findViewById(R.id.edt_birthyear)\r\n        edtBirthMonth = findViewById(R.id.edt_birthmonth)\r\n        edtBirthDay = findViewById(R.id.edt_birthday)\r\n        btnCalendar.setOnClickListener{\r\n            val datePickerDialog = DatePickerDialog(this, { _, year, month, day ->\r\n                edtBirthYear.setText(year.toString())\r\n                if (month < 9) {\r\n                    edtBirthMonth.setText(\"0\" + (month + 1).toString())\r\n                }\r\n                else {\r\n                    edtBirthMonth.setText((month + 1).toString())\r\n                }\r\n                if (day < 10) {\r\n                    edtBirthDay.setText(\"0\" + day.toString())\r\n                }\r\n                else {\r\n                    edtBirthDay.setText(day.toString())\r\n                }\r\n            }, birthYear, birthMonth, birthDay)\r\n            datePickerDialog.show()\r\n        }\r\n\r\n        // mTextViewResult를 스크롤 가능하도록 설정\r\n        mTextViewResult = findViewById(R.id.textView_main_result)\r\n        mTextViewResult.movementMethod = ScrollingMovementMethod()\r\n\r\n        // 클릭 시 현재 액티비티 종료\r\n        backButton.setOnClickListener {\r\n            finish()\r\n        }\r\n\r\n        // 버튼 클릭 시 아이디 중복 확인 과정 수행\r\n        idcheck_button.setOnClickListener {\r\n            val id = id_text_input_edit_text.text.toString().trim()\r\n\r\n            // 아이디가 비어있는지 확인\r\n            if (id.isEmpty()) {\r\n                Toast.makeText(this@PersonalSignUpActivity, \"아이디를 입력해주세요.\", Toast.LENGTH_SHORT).show()\r\n            } else {\r\n                apiService.getData(id).enqueue(object : Callback<List<P_MemberModel>> {\r\n                    override fun onResponse(call: Call<List<P_MemberModel>>, response: Response<List<P_MemberModel>>) {\r\n                        if (response.isSuccessful) {\r\n                            val result = response.body()\r\n                            if (result != null && result.isNotEmpty()) {\r\n                                var cnt = 0\r\n                                for (data in result) {\r\n                                    if (data.personal_id == id) {\r\n                                        // 아이디 중복\r\n                                        cnt = 1\r\n                                        id_text_input_edit_text.setText(\"\")\r\n                                        Toast.makeText(this@PersonalSignUpActivity, \"이미 사용 중인 아이디입니다.\", Toast.LENGTH_SHORT).show()\r\n                                    }\r\n                                }\r\n                                if (cnt == 0) {\r\n                                    Toast.makeText(this@PersonalSignUpActivity, \"사용 가능한 아이디입니다.\", Toast.LENGTH_SHORT).show()\r\n                                    checkID = true\r\n                                }\r\n                            }\r\n                        } else {\r\n                            Toast.makeText(this@PersonalSignUpActivity, \"서버 응답 오류\", Toast.LENGTH_SHORT).show()\r\n                        }\r\n                    }\r\n\r\n                    override fun onFailure(call: Call<List<P_MemberModel>>, t: Throwable) {\r\n                        // 네트워크 오류 처리\r\n                        Toast.makeText(this@PersonalSignUpActivity, \"네트워크 오류\", Toast.LENGTH_SHORT).show()\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        // 버튼 클릭 시 회원가입 과정 수행\r\n        signUp_button.setOnClickListener {\r\n            val id = id_text_input_edit_text.text.toString().trim()\r\n            val password = password_text_input_edit_text.text.toString().trim()\r\n            val password_recheck = password_recheck_text_input_edit_text.text.toString().trim()\r\n            val name = name_textview_input_edit_text.text.toString().trim()\r\n            val birth = edtBirthYear.text.toString().trim() + edtBirthMonth.text.toString().trim() + edtBirthDay.text.toString().trim()\r\n            val email = email_textview_input_edit_text.text.toString().trim()\r\n            val phonenum = phoneNumber_textview_input_edit_text.text.toString().trim()\r\n            val address = address_textview_input_edit_text.text.toString().trim()\r\n            // val phoneNumberCheck = phoneNumberCheck_textview_input_edit_text.toString().trim()\r\n\r\n            if (id.isEmpty() || password.isEmpty() || password_recheck.isEmpty() || name.isEmpty() || birth.isEmpty() || email.isEmpty() || phonenum.isEmpty() || address.isEmpty()) {\r\n                Toast.makeText(this@PersonalSignUpActivity, \"정보를 입력해주세요.\", Toast.LENGTH_SHORT).show()\r\n            } else {\r\n                if (password == password_recheck) {\r\n                    if (password.length <= 5) {\r\n                        Toast.makeText(this@PersonalSignUpActivity, \"비밀번호를 6자리 이상 입력해주세요.\", Toast.LENGTH_SHORT).show()\r\n                    } else if (!email.contains(\"@\")) {\r\n                        Toast.makeText(this@PersonalSignUpActivity, \"이메일에 @를 포함시키세요.\", Toast.LENGTH_SHORT).show()\r\n                    } else if (phonenum.contains(\"-\") || !(phonenum[1] == '1')) {\r\n                        Toast.makeText(this@PersonalSignUpActivity, \"올바른 전화번호 형식으로 입력해주세요.\", Toast.LENGTH_SHORT).show()\r\n                    } else if (checkID == false) {\r\n                        Toast.makeText(this@PersonalSignUpActivity, \"아이디를 중복확인을 진행하세요.\", Toast.LENGTH_SHORT).show()\r\n                    } else {\r\n                        // 사용자 데이터를 포함하는 P_MemberModel 객체를 생성합니다.\r\n                        val memberModel = P_MemberModel(id, password, name, birth, email, phonenum, address)\r\n\r\n                        // Retrofit을 사용하여 서버에 사용자 데이터를 보냅니다.\r\n                        apiService.postData(memberModel).enqueue(object : Callback<P_MemberModel> {\r\n                            override fun onResponse(call: Call<P_MemberModel>, response: Response<P_MemberModel>) {\r\n                                if (response.message().equals(\"Created\")) {\r\n                                    Toast.makeText(this@PersonalSignUpActivity, \"회원가입에 성공하셨습니다.\", Toast.LENGTH_SHORT).show()\r\n                                    checkID = false\r\n                                    finish()\r\n                                } else {\r\n                                    Toast.makeText(this@PersonalSignUpActivity, \"회원가입 실패\", Toast.LENGTH_SHORT).show()\r\n                                }\r\n                            }\r\n\r\n                            override fun onFailure(call: Call<P_MemberModel>, t: Throwable) {\r\n                                // 네트워크 오류 처리\r\n                                Toast.makeText(this@PersonalSignUpActivity, \"네트워크 오류\", Toast.LENGTH_SHORT).show()\r\n                            }\r\n                        })\r\n                    }\r\n                } else {\r\n                    Toast.makeText(this@PersonalSignUpActivity, \"비밀번호가 일치하지 않습니다.\", Toast.LENGTH_SHORT).show()\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//package com.example.a23_hf069\r\n//\r\n//import androidx.appcompat.app.AppCompatActivity\r\n//import android.os.Bundle\r\n//import android.widget.AdapterView\r\n//import androidx.appcompat.app.ActionBar\r\n//import android.app.ProgressDialog\r\n//import android.os.AsyncTask\r\n//import android.text.method.ScrollingMovementMethod\r\n//import android.util.Log\r\n//import android.view.View\r\n//import android.widget.Button\r\n//import android.widget.EditText\r\n//import android.widget.ImageButton\r\n//import android.widget.TextView\r\n//import android.widget.Toast\r\n//import okhttp3.FormBody\r\n//import okhttp3.OkHttpClient\r\n//import okhttp3.Request\r\n//import java.io.BufferedReader\r\n//import java.io.InputStream\r\n//import java.io.InputStreamReader\r\n//import java.net.HttpURLConnection\r\n//import java.net.URL\r\n//import retrofit2.Call\r\n//import retrofit2.Callback\r\n//import retrofit2.Response\r\n//import retrofit2.Retrofit\r\n//import retrofit2.converter.gson.GsonConverterFactory\r\n//import com.amazonaws.auth.BasicAWSCredentials\r\n//import com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient\r\n//import com.amazonaws.services.simpleemail.model.*\r\n//import java.util.UUID\r\n//import androidx.lifecycle.ViewModel\r\n//import kotlinx.coroutines.Dispatchers\r\n//import kotlinx.coroutines.withContext\r\n//\r\n//\r\n//class PersonalSignUpActivity : AppCompatActivity(), AdapterView.OnItemSelectedListener {\r\n//\r\n//    // IP 주소와 태그를 초기화\r\n//    private var IP_ADDRESS = \"54.180.186.168\" // 본인 IP주소를 넣으세요.\r\n//    private var TAG = \"phptest\" // phptest log 찍으려는 용도\r\n//    private var checkID = false\r\n//\r\n//    // 뷰 요소들을 선언\r\n//    private lateinit var backButton: ImageButton // go back to prev page\r\n//    private lateinit var id_text_input_edit_text: EditText // id\r\n//    private lateinit var idcheck_button: Button // id duplicate check\r\n//    private lateinit var password_text_input_edit_text: EditText // password\r\n//    private lateinit var password_recheck_text_input_edit_text: EditText // password recheck\r\n//    private lateinit var name_textview_input_edit_text: EditText // name\r\n//    private lateinit var email_textview_input_edit_text: EditText // email\r\n//    private lateinit var phoneNumber_textview_input_edit_text: EditText // phone number\r\n//    private lateinit var btnEmailCertify: Button // email certification button\r\n//    private lateinit var signUp_button: Button // sign up button\r\n//\r\n//    // TextView 요소인 mTextViewResult 선언\r\n//    private lateinit var mTextViewResult: TextView\r\n//\r\n//    private lateinit var emailViewModel: EmailViewModel\r\n//\r\n//    override fun onCreate(savedInstanceState: Bundle?) {\r\n//        super.onCreate(savedInstanceState)\r\n//        setContentView(R.layout.activity_individual_sign_up)\r\n//\r\n//        // 기본 툴바 숨기기\r\n//        val actionBar: ActionBar? = supportActionBar\r\n//        if (actionBar != null) {\r\n//            actionBar.hide()\r\n//        }\r\n//\r\n//        // 각 뷰의 요소들과 레이아웃 파일에서의 아이디 연결\r\n//        backButton = findViewById(R.id.backButton)  // go back to prev page\r\n//        id_text_input_edit_text = findViewById(R.id.id_text_input_edit_text) // personal id\r\n//        idcheck_button = findViewById(R.id.idCheck_button) // id duplicate check\r\n//        password_text_input_edit_text = findViewById(R.id.password_text_input_edit_text) // personal password\r\n//        password_recheck_text_input_edit_text = findViewById(R.id.password_recheck_text_input_edit_text) // password recheck\r\n//        name_textview_input_edit_text = findViewById(R.id.name_textview_input_edit_text) // personal name\r\n//        email_textview_input_edit_text = findViewById(R.id.email_textview_input_edit_text) // personal email\r\n//        phoneNumber_textview_input_edit_text = findViewById(R.id.phoneNumber_textview_input_edit_text) // personal phonenum\r\n//        btnEmailCertify = findViewById(R.id.btnEmailCertify)\r\n//        signUp_button = findViewById(R.id.signUp_button)\r\n//\r\n//        // mTextViewResult를 스크롤 가능하도록 설정\r\n//        mTextViewResult = findViewById(R.id.textView_main_result)\r\n//        mTextViewResult.movementMethod = ScrollingMovementMethod()\r\n//\r\n//        // 클릭 시 현재 액티비티 종료\r\n//        backButton.setOnClickListener {\r\n//            finish()\r\n//        }\r\n//\r\n//        // 버튼 클릭 시 아이디 중복 확인 과정 수행\r\n//        idcheck_button.setOnClickListener {\r\n//            val id = id_text_input_edit_text.text.toString().trim()\r\n//\r\n//            // 아이디가 비어있는지 확인\r\n//            if (id.isEmpty()) {\r\n//                Toast.makeText(this@PersonalSignUpActivity, \"아이디를 입력해주세요.\", Toast.LENGTH_SHORT).show()\r\n//            } else {\r\n//                // 'CheckIdDuplicate' 클래스의 인스턴스인 'task'를 생성\r\n//                val task = CheckIdDuplicate()\r\n//\r\n//                // 'task'의 'execute' 메서드를 호출해 백그라운드에서 아이디 중복 여부 확인\r\n//                task.execute(\"http://$IP_ADDRESS/android_id_check.php\", id)\r\n//            }\r\n//        }\r\n//\r\n//        // 버튼 클릭시 이메일 인증과정 진행\r\n//        btnEmailCertify.setOnClickListener {\r\n//            val emailAddress = email_textview_input_edit_text.text.toString()\r\n//            if (isValidEmail(emailAddress)) {\r\n//                // Amazon SES 인증 정보 설정\r\n//                val credentials = BasicAWSCredentials(\"AKIA3TFEOQMXM7LIFFWS\", \"abiuY2bRi7iBXvuuDLvYkQ4bhMtmAAIMCvQOR35/\")\r\n//                val sesClient = AmazonSimpleEmailServiceClient(credentials)\r\n//\r\n//                // 이메일 전송 작업 실행\r\n//                SendEmailTask(sesClient, emailAddress).execute()\r\n//            } else {\r\n//                Toast.makeText(this@PersonalSignUpActivity, \"유효한 이메일 주소를 입력해주세요.\", Toast.LENGTH_SHORT).show()\r\n//            }\r\n//        }\r\n//\r\n//        // 버튼 클릭 시 회원가입 과정 수행\r\n//        signUp_button.setOnClickListener {\r\n//            val id = id_text_input_edit_text.text.toString().trim()\r\n//            val password = password_text_input_edit_text.text.toString().trim()\r\n//            val password_recheck = password_recheck_text_input_edit_text.text.toString().trim()\r\n//            val name = name_textview_input_edit_text.text.toString().trim()\r\n//            val email = email_textview_input_edit_text.text.toString().trim()\r\n//            val phoneNumber = phoneNumber_textview_input_edit_text.text.toString().trim()\r\n//            // val phoneNumberCheck = phoneNumberCheck_textview_input_edit_text.toString().trim()\r\n//\r\n//            if (id.isEmpty() || password.isEmpty() || password_recheck.isEmpty() || name.isEmpty() || email.isEmpty() || phoneNumber.isEmpty()) {\r\n//                Toast.makeText(this@PersonalSignUpActivity, \"정보를 입력해주세요.\", Toast.LENGTH_SHORT).show()\r\n//            } else {\r\n//                if (password == password_recheck) {\r\n//                    if (password.length <= 5) {\r\n//                        Toast.makeText(this@PersonalSignUpActivity, \"비밀번호를 6자리 이상 입력해주세요.\", Toast.LENGTH_SHORT).show()\r\n//                    } else if (!email.contains(\"@\")) {\r\n//                        Toast.makeText(this@PersonalSignUpActivity, \"이메일에 @를 포함시키세요.\", Toast.LENGTH_SHORT).show()\r\n//                    } else if (phoneNumber.contains(\"-\") || !(phoneNumber[1] == '1')) {\r\n//                        Toast.makeText(this@PersonalSignUpActivity, \"올바른 전화번호 형식으로 입력해주세요.\", Toast.LENGTH_SHORT).show()\r\n//                    } else if (checkID == false) {\r\n//                        Toast.makeText(this@PersonalSignUpActivity, \"아이디를 중복확인을 진행하세요.\", Toast.LENGTH_SHORT).show()\r\n//                    } else {\r\n//                        // 'InsertData' 클래스의 인스턴스인 'task'를 생성\r\n//                        val task = InsertData()\r\n//\r\n//                        // 'task'의 'execute'메서드를 호출해 백그라운드에서 데이터를 삽입\r\n//                        task.execute(\r\n//                            // 'execute' 메서드에 서버 URL과 회원가입에 필요한 개인정보를 전달\r\n//                            \"http://$IP_ADDRESS/android_log_insert_php.php\",\r\n//                            id,\r\n//                            password,\r\n//                            password_recheck,\r\n//                            name,\r\n//                            email,\r\n//                            phoneNumber\r\n//                        )\r\n//                        Toast.makeText(this@PersonalSignUpActivity, \"회원가입에 성공하셨습니다.\", Toast.LENGTH_SHORT).show()\r\n//                        checkID = false\r\n//                        finish()\r\n//                    }\r\n//                } else {\r\n//                    Toast.makeText(this@PersonalSignUpActivity, \"비밀번호가 일치하지 않습니다.\", Toast.LENGTH_SHORT).show()\r\n//                }\r\n//            }\r\n//        }\r\n//    }\r\n//\r\n//    // AsyncTask를 상속받고, 서버로 데이터를 전송\r\n//    inner class InsertData : AsyncTask<String, Void, String>() {\r\n//        private var progressDialog: ProgressDialog? = null\r\n//\r\n//        // 백그라운드 작업 실행 전 실행, 프로그레스 다이얼로그 표시\r\n//        override fun onPreExecute() {\r\n//            super.onPreExecute()\r\n//            progressDialog = ProgressDialog.show(\r\n//                this@PersonalSignUpActivity,\r\n//                \"Please Wait\",\r\n//                null,\r\n//                true,\r\n//                true\r\n//            )\r\n//        }\r\n//\r\n//        // 백그라운드 작업 완료 후 실행, 결과를 처리하고 프로그레스 다이얼로그 종료\r\n//        override fun onPostExecute(result: String) {\r\n//            super.onPostExecute(result)\r\n//            progressDialog?.dismiss()\r\n//            mTextViewResult.text = result\r\n//            Log.d(TAG, \"POST response  - $result\")\r\n//        }\r\n//\r\n//        // 백그라운드에서 수행될 작업 정의, 서버로 데이터 전송 & 응답을 받아 처리\r\n//        // AsyncTask의 Params 매개변수로 가변 인자를 받아 String을 반환\r\n//        override fun doInBackground(vararg params: String): String {\r\n//\r\n//            // param 배열에서 서버 URL과 각각의 개인정보 추출\r\n//            val serverURL = params[0]\r\n//            val personal_id = params[1]\r\n//            val personal_password = params[2]\r\n//            val personal_password_chk = params[3]\r\n//            val personal_name = params[4]\r\n//            val personal_email = params[5]\r\n//            val personal_phonenum = params[6]\r\n//\r\n//            // POST 요청으로 전송할 파라미터 문자열 구성\r\n//            val postParameters =\r\n//                \"personal_id=$personal_id&personal_password=$personal_password&personal_password_chk=$personal_password_chk&personal_name=$personal_name&personal_email=$personal_email&personal_phonenum=$personal_phonenum\"\r\n//\r\n//            // 'serverURL'을 기반으로 URL 객체 생성, 'openConnection'메서드를 사용해 HttpURLconnection 객체 얻음\r\n//            try {\r\n//                val url = URL(serverURL)\r\n//                val httpURLConnection = url.openConnection() as HttpURLConnection\r\n//\r\n//                // 연결과 읽기 타임아웃 설정\r\n//                httpURLConnection.readTimeout = 5000\r\n//                httpURLConnection.connectTimeout = 5000\r\n//\r\n//                // 요청 메서드를 POST로 설정정\r\n//                httpURLConnection.requestMethod = \"POST\"\r\n//\r\n//                // 서버에 연결\r\n//                httpURLConnection.connect()\r\n//\r\n//                // 연결에 대한 출력 스트림을 얻고, 파라미터를 'UTF-8'로 인코딩하여 전송\r\n//                val outputStream = httpURLConnection.outputStream\r\n//                outputStream.write(postParameters.toByteArray(charset(\"UTF-8\")))\r\n//                outputStream.flush()\r\n//                outputStream.close()\r\n//\r\n//                // 서버로부터 응답 상태 코드 얻음\r\n//                val responseStatusCode = httpURLConnection.responseCode\r\n//                Log.d(TAG, \"POST response code - $responseStatusCode\")\r\n//\r\n//                // 응답 상태 코드가 'HTTP_OK(200)'인 경우, 'inputStream'을 얻고, 아닌 경우 'errorStream'을 얻음\r\n//                val inputStream: InputStream\r\n//                inputStream = if (responseStatusCode == HttpURLConnection.HTTP_OK) {\r\n//                    httpURLConnection.inputStream\r\n//                } else {\r\n//                    httpURLConnection.errorStream\r\n//                }\r\n//\r\n//                // 'inputStream'을 'UTF-8'로 읽기 위해 'InputStreadReader'와 'BufferedReader'를 생성\r\n//                val inputStreamReader = InputStreamReader(inputStream, \"UTF-8\")\r\n//                val bufferedReader = BufferedReader(inputStreamReader)\r\n//\r\n//                // 'StringBuilder'를 사용해 응답 데이터를 한 줄씩 읽어 연결\r\n//                val sb = StringBuilder()\r\n//                var line: String? = null\r\n//\r\n//                while (bufferedReader.readLine().also { line = it } != null) {\r\n//                    sb.append(line)\r\n//                }\r\n//\r\n//                // 'bufferReader' 닫기\r\n//                bufferedReader.close()\r\n//                Log.d(\"php 값 :\", sb.toString())\r\n//\r\n//                // 'sb.toString()'을 반환하여 응답 데이터를 반환\r\n//                return sb.toString()\r\n//            } catch (e: Exception) {\r\n//                Log.d(TAG, \"InsertData: Error\", e)\r\n//                return \"Error \" + e.message\r\n//            }\r\n//        }\r\n//    }\r\n//\r\n//    // 아이템이 선택되었을 때 호출\r\n//    override fun onItemSelected(parent: AdapterView<*>?, view: View?, position: Int, id: Long) {}\r\n//\r\n//    // 아무것도 선택되지 않았을 때 호출\r\n//    override fun onNothingSelected(parent: AdapterView<*>?) {}\r\n//\r\n//    // AsyncTask를 상속받고, 서버로 아이디 중복 여부 확인을 위한 데이터를 전송\r\n//    // CheckIdDuplicate 클래스에서 중복 여부를 받아와 처리하는 부분\r\n//    inner class CheckIdDuplicate : AsyncTask<String, Void, String>() {\r\n//        override fun doInBackground(vararg params: String?): String {\r\n//            val url = params[0]?: \"\"\r\n//            val id = params[1]?: \"\"\r\n//\r\n//            val client = OkHttpClient()\r\n//\r\n//            val formBody = FormBody.Builder()\r\n//                .add(\"personal_id\", id)\r\n//                .build()\r\n//\r\n//            val request = Request.Builder()\r\n//                .url(url)\r\n//                .post(formBody)\r\n//                .build()\r\n//\r\n//            val response = client.newCall(request).execute()\r\n//            return response.body?.string() ?: \"\"\r\n//        }\r\n//\r\n//        override fun onPostExecute(result: String?) {\r\n//            super.onPostExecute(result)\r\n//\r\n//            // 중복 여부에 따라 처리\r\n//            if (result == \"duplicate\") {\r\n//                // 중복된 아이디가 존재하는 경우, 아이디 칸을 빈칸으로 만들기\r\n//                id_text_input_edit_text.setText(\"\")\r\n//                Toast.makeText(this@PersonalSignUpActivity, \"이미 사용 중인 아이디입니다.\", Toast.LENGTH_SHORT).show()\r\n//            } else if (result == \"not_duplicate\") {\r\n//                Toast.makeText(this@PersonalSignUpActivity, \"사용 가능한 아이디입니다.\", Toast.LENGTH_SHORT).show()\r\n//                checkID = true\r\n//            } else {\r\n//                // 오류 처리\r\n//                Toast.makeText(this@PersonalSignUpActivity, \"서버 응답 오류\", Toast.LENGTH_SHORT).show()\r\n//            }\r\n//        }\r\n//    }\r\n//\r\n//    private fun initRetrofit(): ApiService {\r\n//        val retrofit = Retrofit.Builder()\r\n//            .baseUrl(\"http://54.180.186.168/\") // 탄력적 IP 주소를 여기에 입력\r\n//            .addConverterFactory(GsonConverterFactory.create())\r\n//            .build()\r\n//\r\n//        return retrofit.create(ApiService::class.java)\r\n//    }\r\n//\r\n//    private fun requestEmailVerification(email: String) {\r\n//        val apiService = initRetrofit()\r\n//        val call = apiService.requestEmailVerification(email)\r\n//\r\n//        call.enqueue(object : Callback<ApiResponse> {\r\n//            override fun onResponse(call: Call<ApiResponse>, response: Response<ApiResponse>) {\r\n//                if (response.isSuccessful && response.body()?.success == true) {\r\n//                    // 인증 요청 성공\r\n//                    btnEmailCertify.text = \"인증완료\"\r\n//                    btnEmailCertify.isEnabled = false\r\n//                } else {\r\n//                    // 인증 요청 실패\r\n//                }\r\n//            }\r\n//\r\n//            override fun onFailure(call: Call<ApiResponse>, t: Throwable) {\r\n//                // 통신 실패\r\n//            }\r\n//        })\r\n//    }\r\n//\r\n//    private inner class SendEmailTask(val sesClient: AmazonSimpleEmailServiceClient, val toEmail: String) :\r\n//        AsyncTask<Void, Void, Boolean>() {\r\n//\r\n//        override fun doInBackground(vararg params: Void?): Boolean {\r\n//            val subject = \"이메일 인증을 완료해주세요\"\r\n//            // UUID 생성 예시\r\n//            val verificationToken = UUID.randomUUID().toString()\r\n//            val message = \"이메일 인증을 완료하려면 다음 링크를 클릭하세요: http://54.180.186.168/android_email_certify_complete.php?token=$verificationToken\"\r\n//\r\n//            val sendEmailRequest = SendEmailRequest()\r\n//                .withSource(\"yelly0104@naver.com\") // 발신자 이메일 주소\r\n//                .withDestination(Destination().withToAddresses(toEmail)) // 수신자 이메일 주소\r\n//                .withMessage(Message().withSubject(Content().withCharset(\"UTF-8\").withData(subject))\r\n//                    .withBody(Body().withText(Content().withCharset(\"UTF-8\").withData(message))))\r\n//\r\n//            try {\r\n//                sesClient.sendEmail(sendEmailRequest)\r\n//                return true\r\n//            } catch (e: Exception) {\r\n//                e.printStackTrace()\r\n//                return false\r\n//            }\r\n//        }\r\n//\r\n//        override fun onPostExecute(result: Boolean) {\r\n//            super.onPostExecute(result)\r\n//            if (result) {\r\n//                Toast.makeText(this@PersonalSignUpActivity, \"이메일이 전송되었습니다.\", Toast.LENGTH_SHORT).show()\r\n//                btnEmailCertify.text = \"인증완료\"\r\n//                btnEmailCertify.isEnabled = false\r\n//            } else {\r\n//                Toast.makeText(this@PersonalSignUpActivity, \"이메일 전송 실패\", Toast.LENGTH_SHORT).show()\r\n//                Log.d(\"email fail\", \"email send fail\")\r\n//            }\r\n//        }\r\n//    }\r\n//\r\n//    private fun isValidEmail(email: String): Boolean {\r\n//        // 이메일 주소 유효성 검사 로직 추가\r\n//        return android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches()\r\n//    }\r\n//\r\n//    class EmailViewModel : ViewModel() {\r\n//        suspend fun sendEmail(sesClient: AmazonSimpleEmailServiceClient, toEmail: String): Boolean {\r\n//            return withContext(Dispatchers.IO) {\r\n//                val subject = \"이메일 인증을 완료해주세요\"\r\n//                val verificationToken = UUID.randomUUID().toString()\r\n//                val message = \"이메일 인증을 완료하려면 다음 링크를 클릭하세요: http://54.180.186.168/android_email_certify_complete.php?token=$verificationToken\"\r\n//\r\n//                val sendEmailRequest = SendEmailRequest()\r\n//                    .withSource(\"yelly0104@naver.com\")\r\n//                    .withDestination(Destination().withToAddresses(toEmail))\r\n//                    .withMessage(Message().withSubject(Content().withCharset(\"UTF-8\").withData(subject))\r\n//                        .withBody(Body().withText(Content().withCharset(\"UTF-8\").withData(message))))\r\n//\r\n//                try {\r\n//                    sesClient.sendEmail(sendEmailRequest)\r\n//                    true\r\n//                } catch (e: Exception) {\r\n//                    e.printStackTrace()\r\n//                    false\r\n//                }\r\n//            }\r\n//        }\r\n//    }\r\n//}\r\n//\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/a23_hf069/PersonalSignUpActivity.kt b/app/src/main/java/com/example/a23_hf069/PersonalSignUpActivity.kt
--- a/app/src/main/java/com/example/a23_hf069/PersonalSignUpActivity.kt	(revision 23234ed9e346b8ad484d179cb3cf766e52e29e0b)
+++ b/app/src/main/java/com/example/a23_hf069/PersonalSignUpActivity.kt	(date 1694527215258)
@@ -3,42 +3,18 @@
 import android.app.DatePickerDialog
 import androidx.appcompat.app.AppCompatActivity
 import android.os.Bundle
-import android.widget.AdapterView
 import androidx.appcompat.app.ActionBar
-import android.app.ProgressDialog
-import android.content.ContentValues.TAG
-import android.content.Intent
-import android.os.AsyncTask
 import android.text.method.ScrollingMovementMethod
-import android.util.Log
-import android.view.View
 import android.widget.Button
 import android.widget.EditText
 import android.widget.ImageButton
 import android.widget.TextView
 import android.widget.Toast
-import okhttp3.FormBody
-import okhttp3.OkHttpClient
-import okhttp3.Request
-import java.io.BufferedReader
-import java.io.InputStream
-import java.io.InputStreamReader
-import java.net.HttpURLConnection
-import java.net.URL
 import retrofit2.Call
 import retrofit2.Callback
 import retrofit2.Response
 import retrofit2.Retrofit
 import retrofit2.converter.gson.GsonConverterFactory
-import com.amazonaws.auth.BasicAWSCredentials
-import com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient
-import com.amazonaws.services.simpleemail.model.*
-import java.util.UUID
-import androidx.lifecycle.ViewModel
-import kotlinx.coroutines.Dispatchers
-import kotlinx.coroutines.GlobalScope
-import kotlinx.coroutines.launch
-import kotlinx.coroutines.withContext
 import java.util.Calendar
 
 
Index: app/src/main/java/com/example/a23_hf069/C_loginFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import android.content.Intent\r\nimport android.os.Bundle\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Button\r\nimport android.widget.EditText\r\nimport android.widget.Toast\r\nimport androidx.fragment.app.Fragment\r\nimport com.example.a23_hf069.C_MemberModel\r\nimport com.example.a23_hf069.CorporateHomeActivity\r\nimport com.example.a23_hf069.CorporateSignUpActivity\r\nimport com.example.a23_hf069.FindCorporateIdActivity\r\nimport com.example.a23_hf069.R\r\nimport com.example.a23_hf069.RetrofitInterface\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport retrofit2.Retrofit\r\nimport retrofit2.converter.gson.GsonConverterFactory\r\n\r\nclass C_loginFragment : Fragment() {\r\n    lateinit var login: Button\r\n    lateinit var signUp: Button\r\n    lateinit var btnFindId: Button\r\n    private lateinit var id: String\r\n    private lateinit var id_text_input_edit_text: EditText\r\n    private lateinit var password_text_input_edit_text: EditText\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        return inflater.inflate(R.layout.fragment_c_login, container, false)\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n\r\n        login = view.findViewById<Button>(R.id.login_btn)\r\n        signUp = view.findViewById<Button>(R.id.signUp_btn)\r\n        btnFindId = view.findViewById<Button>(R.id.findID_btn)\r\n\r\n        id_text_input_edit_text = view.findViewById<EditText>(R.id.id_text)\r\n        password_text_input_edit_text = view.findViewById<EditText>(R.id.pw_text)\r\n\r\n        login.setOnClickListener() {\r\n            id = id_text_input_edit_text.text.toString().trim()\r\n            val password = password_text_input_edit_text.text.toString().trim()\r\n\r\n            if (id.isEmpty() || password.isEmpty()) {\r\n                Toast.makeText(requireContext(), \"정보를 입력해주세요.\", Toast.LENGTH_SHORT).show()\r\n            } else {\r\n                val retrofit = Retrofit.Builder()\r\n                    .baseUrl(RetrofitInterface.API_URL)\r\n                    .addConverterFactory(GsonConverterFactory.create())\r\n                    .build()\r\n\r\n                val apiService = retrofit.create(RetrofitInterface::class.java)\r\n\r\n                apiService.getCorporateData(id).enqueue(object : Callback<List<C_MemberModel>> {\r\n                    override fun onResponse(call: Call<List<C_MemberModel>>, response: Response<List<C_MemberModel>>) {\r\n                        if (response.isSuccessful) {\r\n                            val result = response.body()\r\n                            if (result != null && result.isNotEmpty()) {\r\n                                for (data in result) {\r\n                                    if (data.company_id == id) {\r\n                                        Toast.makeText(requireContext(), \"로그인 성공\", Toast.LENGTH_SHORT).show()\r\n                                        val intent = Intent(requireActivity(), CorporateHomeActivity::class.java)\r\n                                        intent.putExtra(\"userCompanyName\", data.company_name)\r\n                                        intent.putExtra(\"userCompanyId\", data.company_id)\r\n                                        startActivity(intent)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    override fun onFailure(call: Call<List<C_MemberModel>>, t: Throwable) {\r\n                        Toast.makeText(\r\n                            requireContext(),\r\n                            \"통신 오류: \" + t.message,\r\n                            Toast.LENGTH_SHORT\r\n                        ).show()\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        signUp.setOnClickListener() {\r\n            val intent = Intent(getActivity(), CorporateSignUpActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n\r\n        btnFindId.setOnClickListener {\r\n            val intent = Intent(getActivity(), FindCorporateIdActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/a23_hf069/C_loginFragment.kt b/app/src/main/java/com/example/a23_hf069/C_loginFragment.kt
--- a/app/src/main/java/com/example/a23_hf069/C_loginFragment.kt	(revision 23234ed9e346b8ad484d179cb3cf766e52e29e0b)
+++ b/app/src/main/java/com/example/a23_hf069/C_loginFragment.kt	(date 1694527326083)
@@ -9,7 +9,7 @@
 import androidx.fragment.app.Fragment
 import com.example.a23_hf069.C_MemberModel
 import com.example.a23_hf069.CorporateHomeActivity
-import com.example.a23_hf069.CorporateSignUpActivity
+// import com.example.a23_hf069.CorporateSignUpActivity
 import com.example.a23_hf069.FindCorporateIdActivity
 import com.example.a23_hf069.R
 import com.example.a23_hf069.RetrofitInterface
@@ -87,10 +87,10 @@
             }
         }
 
-        signUp.setOnClickListener() {
-            val intent = Intent(getActivity(), CorporateSignUpActivity::class.java)
-            startActivity(intent)
-        }
+//        signUp.setOnClickListener() {
+//            val intent = Intent(getActivity(), CorporateSignUpActivity::class.java)
+//            startActivity(intent)
+//        }
 
         btnFindId.setOnClickListener {
             val intent = Intent(getActivity(), FindCorporateIdActivity::class.java)
Index: app/src/main/java/com/example/a23_hf069/P_loginFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.a23_hf069\r\n\r\nimport android.app.ProgressDialog\r\nimport android.content.Intent\r\nimport android.os.AsyncTask\r\nimport android.os.Bundle\r\nimport android.text.method.ScrollingMovementMethod\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.*\r\nimport androidx.fragment.app.Fragment\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport retrofit2.Retrofit\r\nimport retrofit2.converter.gson.GsonConverterFactory\r\nimport java.io.BufferedReader\r\nimport java.io.InputStream\r\nimport java.io.InputStreamReader\r\nimport java.net.HttpURLConnection\r\nimport java.net.URL\r\n\r\n\r\nclass P_loginFragment : Fragment() { //개인로그인\r\n\r\n    private lateinit var id_text_input_edit_text: EditText // id\r\n    private lateinit var password_text_input_edit_text: EditText // password\r\n    private lateinit var id: String // 사용자 아이디\r\n    lateinit var btnlogin: Button // 로그인 버튼\r\n    lateinit var btnFindId: Button // 아이디 찾기 버튼\r\n    lateinit var btnSignUp: Button // 회원가입 버튼\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        return inflater.inflate(R.layout.fragment_p_login, container, false)\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n\r\n        btnlogin = view.findViewById<Button>(R.id.login_btn)\r\n        btnFindId = view.findViewById<Button>(R.id.findID_btn)\r\n        btnSignUp = view.findViewById<Button>(R.id.signUp_btn)\r\n\r\n        id_text_input_edit_text = view.findViewById<EditText>(R.id.id_text)\r\n        password_text_input_edit_text = view.findViewById<EditText>(R.id.pw_text)\r\n\r\n        btnlogin.setOnClickListener() {\r\n            id = id_text_input_edit_text.text.toString().trim()\r\n            val password = password_text_input_edit_text.text.toString().trim()\r\n\r\n            if (id.isEmpty() || password.isEmpty()) {\r\n                Toast.makeText(requireContext(), \"정보를 입력해주세요.\", Toast.LENGTH_SHORT).show()\r\n            } else {\r\n                // Retrofit 객체 생성\r\n                val retrofit = Retrofit.Builder()\r\n                    .baseUrl(RetrofitInterface.API_URL)\r\n                    .addConverterFactory(GsonConverterFactory.create())\r\n                    .build()\r\n\r\n                // RetrofitInterface 인터페이스 구현\r\n                val apiService = retrofit.create(RetrofitInterface::class.java)\r\n\r\n                apiService.getData(id).enqueue(object : Callback<List<P_MemberModel>> {\r\n                    override fun onResponse(call: Call<List<P_MemberModel>>, response: Response<List<P_MemberModel>>) {\r\n                        if (response.isSuccessful) {\r\n                            val result = response.body()\r\n                            if (result != null && result.isNotEmpty()) {\r\n                                for (data in result) {\r\n                                    if (data.personal_id == id) {\r\n                                        // 로그인 성공\r\n                                        Toast.makeText(requireContext(), \"로그인 성공\", Toast.LENGTH_SHORT).show()\r\n                                        // 로그인 성공 시 homeactivity로 전환\r\n                                        val intent = Intent(requireActivity(), HomeActivity::class.java)\r\n                                        intent.putExtra(\"userId\", id)\r\n                                        startActivity(intent)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    override fun onFailure(call: Call<List<P_MemberModel>>, t: Throwable) {\r\n                        // 통신 실패 처리\r\n                        Toast.makeText(\r\n                            requireContext(),\r\n                            \"통신 오류: \" + t.message,\r\n                            Toast.LENGTH_SHORT\r\n                        ).show()\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        btnSignUp.setOnClickListener() {\r\n            // 회원 가입 버튼을 눌렀을 때 회원 가입 화면으로 이동\r\n            val intent = Intent(getActivity(), PersonalSignUpActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n\r\n        btnFindId.setOnClickListener {\r\n            // findId 버튼을 클릭하면 FindPersonalIdActivity로 전환\r\n            val intent = Intent(getActivity(), FindPersonalIdActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//package com.example.a23_hf069\r\n//\r\n//import android.app.ProgressDialog\r\n//import android.content.Intent\r\n//import android.os.AsyncTask\r\n//import android.os.Bundle\r\n//import android.text.method.ScrollingMovementMethod\r\n//import android.util.Log\r\n//import android.view.LayoutInflater\r\n//import android.view.View\r\n//import android.view.ViewGroup\r\n//import android.widget.*\r\n//import androidx.fragment.app.Fragment\r\n//import java.io.BufferedReader\r\n//import java.io.InputStream\r\n//import java.io.InputStreamReader\r\n//import java.net.HttpURLConnection\r\n//import java.net.URL\r\n//\r\n//\r\n//class P_loginFragment : Fragment() { //개인로그인\r\n//    private var IP_ADDRESS = \"54.180.186.168\" // 본인 IP주소를 넣으세요.\r\n//\r\n//    private var TAG = \"phptest\" // phptest log 찍으려는 용도\r\n//    private lateinit var id_text_input_edit_text: EditText // id\r\n//    private lateinit var password_text_input_edit_text: EditText // password\r\n//    private lateinit var id: String // 사용자 아이디\r\n//    lateinit var btnlogin : Button // 로그인 버튼\r\n//    lateinit var btnFindId : Button // 아이디 찾기 버튼\r\n//    lateinit var btnSignUp : Button // 회원가입 버튼\r\n//\r\n//    override fun onCreateView(\r\n//        inflater: LayoutInflater, container: ViewGroup?,\r\n//        savedInstanceState: Bundle?\r\n//    ): View?\r\n//    {\r\n//        return inflater.inflate(R.layout.fragment_p_login, container, false)\r\n//    }\r\n//    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n//        super.onViewCreated(view, savedInstanceState)\r\n//\r\n//        btnlogin = view.findViewById<Button>(R.id.login_btn)\r\n//        btnFindId = view.findViewById<Button>(R.id.findID_btn)\r\n//        btnSignUp = view.findViewById<Button>(R.id.signUp_btn)\r\n//\r\n//        id_text_input_edit_text = view.findViewById<EditText>(R.id.id_text)\r\n//        password_text_input_edit_text = view.findViewById<EditText>(R.id.pw_text)\r\n//\r\n//        btnlogin.setOnClickListener() {\r\n//\r\n//            id = id_text_input_edit_text.text.toString().trim()\r\n//            val password = password_text_input_edit_text.text.toString().trim()\r\n//\r\n//            if (id.isEmpty() || password.isEmpty()) {\r\n//                Toast.makeText(requireContext(), \"정보를 입력해주세요.\", Toast.LENGTH_SHORT).show()\r\n//            } else {\r\n//                val task = SelectData()\r\n//                task.execute(\"http://$IP_ADDRESS/android_login_php.php\", id, password)\r\n//            }\r\n//        }\r\n//\r\n//        btnFindId.setOnClickListener {\r\n//            // findId 버튼을 클릭하면 FindPersonalIdActivity로 전환\r\n//            val intent = Intent(getActivity(), FindPersonalIdActivity::class.java)\r\n//            startActivity(intent)\r\n//        }\r\n//\r\n//        btnSignUp.setOnClickListener() {\r\n//            // signUp버튼을 클릭하면 CorporateSignUpActivity로 전환\r\n//            val intent = Intent(getActivity(), PersonalSignUpActivity::class.java)\r\n//            startActivity(intent)\r\n//        }\r\n//    }\r\n//\r\n//    inner class SelectData : AsyncTask<String, Void, String>() {\r\n//        private var progressDialog: ProgressDialog? = null\r\n//        override fun doInBackground(vararg params: String): String {\r\n//            val serverURL = params[0]\r\n//            val userid = params[1]\r\n//            val userpw = params[2]\r\n//\r\n//            val postParameters = \"personal_id=$userid&personal_password=$userpw\"\r\n//\r\n//            try {\r\n//                val url = URL(serverURL)\r\n//                val httpURLConnection = url.openConnection() as HttpURLConnection\r\n//\r\n//                httpURLConnection.readTimeout = 5000\r\n//                httpURLConnection.connectTimeout = 5000\r\n//                httpURLConnection.requestMethod = \"POST\"\r\n//                httpURLConnection.connect()\r\n//\r\n//                val outputStream = httpURLConnection.outputStream\r\n//                outputStream.write(postParameters.toByteArray(charset(\"UTF-8\")))\r\n//                outputStream.flush()\r\n//                outputStream.close()\r\n//\r\n//                val responseStatusCode = httpURLConnection.responseCode\r\n//                Log.d(TAG, \"POST response code - $responseStatusCode\")\r\n//\r\n//                val inputStream: InputStream\r\n//                inputStream = if (responseStatusCode == HttpURLConnection.HTTP_OK) {\r\n//                    httpURLConnection.inputStream\r\n//                } else {\r\n//                    httpURLConnection.errorStream\r\n//                }\r\n//\r\n//                val inputStreamReader = InputStreamReader(inputStream, \"UTF-8\")\r\n//                val bufferedReader = BufferedReader(inputStreamReader)\r\n//                val sb = StringBuilder()\r\n//                var line: String? = null\r\n//\r\n//                while (bufferedReader.readLine().also { line = it } != null) {\r\n//                    sb.append(line)\r\n//                }\r\n//\r\n//                bufferedReader.close()\r\n//                Log.d(\"php 값 :\", sb.toString())\r\n//                return sb.toString()\r\n//            } catch (e: Exception) {\r\n//                Log.d(TAG, \"SelectData: Error\", e)\r\n//                return \"Error \" + e.message\r\n//            }\r\n//        }\r\n//\r\n//        override fun onPostExecute(result: String) {\r\n//            super.onPostExecute(result)\r\n//\r\n//            if (result == \"success\") {\r\n//                // 로그인 성공\r\n//                Toast.makeText(view?.context, \"로그인 성공\", Toast.LENGTH_SHORT).show()\r\n//                // 로그인 성공 시 homeactivity로 전환\r\n//                val intent = Intent(requireActivity(), HomeActivity::class.java)\r\n//                intent.putExtra(\"userId\", id) // 아이디를 Intent에 추가 (사용자 아이디를 HomeActivity로 넘김)\r\n//                startActivity(intent)\r\n//            } else {\r\n//                // 로그인 실패\r\n//                Toast.makeText(view?.context, \"로그인 실패\", Toast.LENGTH_SHORT).show()\r\n//\r\n//                // 추후 삭제할 코드\r\n//                val intent = Intent(getActivity(), HomeActivity::class.java)\r\n//                intent.putExtra(\"userId\", \"test\") // 아이디를 Intent에 추가 (사용자 아이디를 HomeActivity로 넘김)\r\n//                startActivity(intent)\r\n//            }\r\n//        }\r\n//    }\r\n//}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/a23_hf069/P_loginFragment.kt b/app/src/main/java/com/example/a23_hf069/P_loginFragment.kt
--- a/app/src/main/java/com/example/a23_hf069/P_loginFragment.kt	(revision 23234ed9e346b8ad484d179cb3cf766e52e29e0b)
+++ b/app/src/main/java/com/example/a23_hf069/P_loginFragment.kt	(date 1694527340488)
@@ -1,11 +1,7 @@
 package com.example.a23_hf069
 
-import android.app.ProgressDialog
 import android.content.Intent
-import android.os.AsyncTask
 import android.os.Bundle
-import android.text.method.ScrollingMovementMethod
-import android.util.Log
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
@@ -16,11 +12,6 @@
 import retrofit2.Response
 import retrofit2.Retrofit
 import retrofit2.converter.gson.GsonConverterFactory
-import java.io.BufferedReader
-import java.io.InputStream
-import java.io.InputStreamReader
-import java.net.HttpURLConnection
-import java.net.URL
 
 
 class P_loginFragment : Fragment() { //개인로그인
Index: app/src/main/res/layout/activity_corporate_sign_up.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".CorporateSignUpActivity\">\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/toolbar\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"?attr/actionBarSize\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/titleTextView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:text=\"기업회원가입\"\r\n            android:textStyle=\"bold\"\r\n            android:textColor=\"@android:color/black\"\r\n            android:textSize=\"18sp\" />\r\n\r\n        <ImageButton\r\n            android:id=\"@+id/backButton\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"start|center_vertical\"\r\n            android:background=\"@null\"\r\n            android:src=\"@drawable/ic_baseline_arrow_back_ios_24\" />\r\n\r\n    </androidx.appcompat.widget.Toolbar>\r\n\r\n    <ScrollView\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"0dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/toolbar\">\r\n        <!-- 추가할 레이아웃 -->\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\">\r\n            <!--아이디-->\r\n            <TextView\r\n                android:id=\"@+id/id_textview\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"40dp\"\r\n                android:layout_marginTop=\"50dp\"\r\n                android:text=\"아이디\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"15sp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/id_text_input_layout\"\r\n                style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginHorizontal=\"40dp\"\r\n                android:layout_marginTop=\"10dp\"\r\n                app:counterEnabled=\"true\"\r\n                app:counterMaxLength=\"20\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/id_text_input_edit_text\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:hint=\"작성 후 중복확인을 진행하세요\"\r\n                    android:textAppearance=\"@style/TextLabel\" />\r\n\r\n                <Button\r\n                    android:id=\"@+id/idCheck_button\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"end\"\r\n                    android:text=\"중복확인\" />\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n\r\n            <!--비밀번호-->\r\n            <TextView\r\n                android:id=\"@+id/password_textview\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"40dp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:text=\"비밀번호\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"15sp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/password_text_input_layout\"\r\n                style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginHorizontal=\"40dp\"\r\n                android:layout_marginTop=\"10dp\"\r\n                app:counterEnabled=\"true\"\r\n                app:counterMaxLength=\"16\"\r\n                app:passwordToggleEnabled=\"true\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/password_text_input_edit_text\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:hint=\"6자 이상 입력하세요\"\r\n                    android:inputType=\"textPassword\"\r\n                    android:textAppearance=\"@style/TextLabel\" />\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <!--비밀번호 확인-->\r\n            <TextView\r\n                android:id=\"@+id/password_recheck_textview\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"40dp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:text=\"비밀번호 확인\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"15sp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/password_recheck_text_input_layout\"\r\n                style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginHorizontal=\"40dp\"\r\n                android:layout_marginTop=\"10dp\"\r\n                app:passwordToggleEnabled=\"true\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/password_recheck_text_input_edit_text\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:inputType=\"textPassword\"\r\n                    android:textAppearance=\"@style/TextLabel\" />\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <!--이메일-->\r\n            <TextView\r\n                android:id=\"@+id/email_textview\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"40dp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:text=\"이메일\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"15sp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/email_textview_input_layout\"\r\n                style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginHorizontal=\"40dp\"\r\n                android:layout_marginTop=\"10dp\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/email_textview_input_edit_text\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:hint=\"예) keepwork@naver.com\"\r\n                    android:textAppearance=\"@style/TextLabel\" />\r\n\r\n                <Button\r\n                    android:id=\"@+id/btnEmailCertify\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"end\"\r\n                    android:layout_marginTop=\"5dp\"\r\n                    android:text=\"이메일 인증\" />\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <!--이름-->\r\n            <TextView\r\n                android:id=\"@+id/name_textview\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"40dp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:text=\"인사 담당자 이름\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"15sp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/name_textview_input_layout\"\r\n                style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginHorizontal=\"40dp\"\r\n                android:layout_marginTop=\"10dp\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/name_textview_input_edit_text\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:hint=\"예) 홍길동\"\r\n                    android:textAppearance=\"@style/TextLabel\" />\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <!--전화번호-->\r\n            <TextView\r\n                android:id=\"@+id/phone_number_textview\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"40dp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:text=\"전화번호\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"15sp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/phoneNumber_textview_input_layout\"\r\n                style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginHorizontal=\"40dp\"\r\n                android:layout_marginTop=\"10dp\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/phoneNumber_textview_input_edit_text\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:hint=\"예) 021234567\"\r\n                    android:textAppearance=\"@style/TextLabel\" />\r\n\r\n<!--                                <Button-->\r\n<!--                                    android:id=\"@+id/phoneNumber_button\"-->\r\n<!--                                    android:layout_width=\"wrap_content\"-->\r\n<!--                                    android:layout_height=\"wrap_content\"-->\r\n<!--                                    android:layout_gravity=\"end\"-->\r\n<!--                                    android:text=\"본인인증\" />-->\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <!--전화번호 인증번호-->\r\n            <!--            <TextView-->\r\n            <!--                android:id=\"@+id/phoneNumberCheck_textview\"-->\r\n            <!--                android:layout_width=\"wrap_content\"-->\r\n            <!--                android:layout_height=\"wrap_content\"-->\r\n            <!--                android:layout_marginStart=\"40dp\"-->\r\n            <!--                android:layout_marginTop=\"20dp\"-->\r\n            <!--                android:text=\"인증번호\"-->\r\n            <!--                android:textColor=\"@color/black\"-->\r\n            <!--                android:textSize=\"15sp\"-->\r\n            <!--                android:textStyle=\"bold\" />-->\r\n\r\n\r\n            <!--            <com.google.android.material.textfield.TextInputLayout-->\r\n            <!--                android:id=\"@+id/phoneNumberCheck_textview_input_layout\"-->\r\n            <!--                style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"-->\r\n            <!--                android:layout_width=\"match_parent\"-->\r\n            <!--                android:layout_height=\"wrap_content\"-->\r\n            <!--                android:layout_marginHorizontal=\"40dp\"-->\r\n            <!--                android:layout_marginTop=\"10dp\">-->\r\n\r\n            <!--                <com.google.android.material.textfield.TextInputEditText-->\r\n            <!--                    android:id=\"@+id/phoneNumberCheck_textview_input_edit_text\"-->\r\n            <!--                    android:layout_width=\"match_parent\"-->\r\n            <!--                    android:layout_height=\"wrap_content\"-->\r\n            <!--                    android:textAppearance=\"@style/TextLabel\" />-->\r\n\r\n            <!--                <Button-->\r\n            <!--                    android:id=\"@+id/phoneNumberCheck_button\"-->\r\n            <!--                    android:layout_width=\"wrap_content\"-->\r\n            <!--                    android:layout_height=\"wrap_content\"-->\r\n            <!--                    android:layout_gravity=\"end\"-->\r\n            <!--                    android:text=\"확인\" />-->\r\n\r\n            <!--            </com.google.android.material.textfield.TextInputLayout>-->\r\n\r\n            <!--사업자 등록번호-->\r\n            <TextView\r\n                android:id=\"@+id/registrationNum_textview\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"40dp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:text=\"사업자 등록번호\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"15sp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/registrationNum_textview_input_layout\"\r\n                style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginHorizontal=\"40dp\"\r\n                android:layout_marginTop=\"10dp\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/restrationNum_textview_input_edit_text\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:hint=\"예) xxx-xx-xxxxx\"\r\n                    android:textAppearance=\"@style/TextLabel\" />\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\">\r\n            <TextView\r\n                android:id=\"@+id/companyName_textview\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_weight=\"1\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"40dp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:text=\"회사명\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"15sp\"\r\n                android:textStyle=\"bold\" />\r\n            <TextView\r\n                android:id=\"@+id/_textview\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_weight=\"1\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"40dp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:text=\"대표명\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"15sp\"\r\n                android:textStyle=\"bold\"\r\n                />\r\n        </LinearLayout>\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"horizontal\">\r\n\r\n                <com.google.android.material.textfield.TextInputLayout\r\n                    android:id=\"@+id/companyName_textview_input_layout\"\r\n                    style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:layout_marginStart=\"40dp\"\r\n                    android:layout_marginEnd=\"20dp\">\r\n\r\n                    <com.google.android.material.textfield.TextInputEditText\r\n                        android:id=\"@+id/companyName_textview_input_edit_text\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:hint=\" \"\r\n                        tools:ignore=\"SpeakableTextPresentCheck\"\r\n                        android:textAppearance=\"@style/TextLabel\" />\r\n                </com.google.android.material.textfield.TextInputLayout>\r\n\r\n                <com.google.android.material.textfield.TextInputLayout\r\n                    android:id=\"@+id/_textview_input_layout\"\r\n                    style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:layout_marginStart=\"20dp\"\r\n                    android:layout_marginEnd=\"40dp\">\r\n\r\n                    <com.google.android.material.textfield.TextInputEditText\r\n                        android:id=\"@+id/_textview_input_edit_text\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:hint=\" \"\r\n                        android:textAppearance=\"@style/TextLabel\" />\r\n                </com.google.android.material.textfield.TextInputLayout>\r\n            </LinearLayout>\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"horizontal\">\r\n                <TextView\r\n                    android:id=\"@+id/year_textview\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_weight=\"1\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"40dp\"\r\n                    android:layout_marginTop=\"20dp\"\r\n                    android:text=\"설립년도\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"15sp\"\r\n                    android:textStyle=\"bold\" />\r\n                <TextView\r\n                    android:id=\"@+id/worker_textview\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_weight=\"1\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"40dp\"\r\n                    android:layout_marginTop=\"20dp\"\r\n                    android:text=\"직원수\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"15sp\"\r\n                    android:textStyle=\"bold\"\r\n                    />\r\n            </LinearLayout>\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"horizontal\">\r\n\r\n                <com.google.android.material.textfield.TextInputLayout\r\n                    android:id=\"@+id/year_textview_input_layout\"\r\n                    style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:layout_marginStart=\"40dp\"\r\n                    android:layout_marginEnd=\"20dp\">\r\n\r\n                    <com.google.android.material.textfield.TextInputEditText\r\n                        android:id=\"@+id/year_textview_input_edit_text\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:hint=\" \"\r\n                        tools:ignore=\"SpeakableTextPresentCheck\"\r\n                        android:textAppearance=\"@style/TextLabel\" />\r\n                </com.google.android.material.textfield.TextInputLayout>\r\n\r\n                <com.google.android.material.textfield.TextInputLayout\r\n                    android:id=\"@+id/worker_textview_input_layout\"\r\n                    style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:layout_marginStart=\"20dp\"\r\n                    android:layout_marginEnd=\"40dp\">\r\n\r\n                    <com.google.android.material.textfield.TextInputEditText\r\n                        android:id=\"@+id/worker_textview_input_edit_text\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:hint=\" \"\r\n                        android:textAppearance=\"@style/TextLabel\" />\r\n                </com.google.android.material.textfield.TextInputLayout>\r\n            </LinearLayout>\r\n\r\n            <!--회사주소-->\r\n            <TextView\r\n                android:id=\"@+id/companyAddress_textview\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"40dp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:text=\"회사 주소\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"15sp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/companyAddress_textview_input_layout\"\r\n                style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginHorizontal=\"40dp\"\r\n                android:layout_marginTop=\"10dp\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/companyAddress_textview_input_edit_text\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:hint=\"예) 서울특별시 노원구 화랑로 621 (공릉동)\"\r\n                    android:textAppearance=\"@style/TextLabel\" />\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <TextView\r\n                android:id=\"@+id/companyClassification_textview\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"40dp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:text=\"회사 구분\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"15sp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n            <Spinner\r\n                android:id=\"@+id/companyClassification\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:layout_marginStart=\"20dp\"\r\n                android:layout_marginEnd=\"40dp\"\r\n                android:spinnerMode=\"dropdown\"/>\r\n\r\n            <!--회원가입 버튼-->\r\n            <Button\r\n                android:id=\"@+id/signUp_button\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:text=\"회원가입\"\r\n                android:textSize=\"15sp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/textView_main_result\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:visibility=\"invisible\" />\r\n\r\n\r\n\r\n\r\n        </LinearLayout>\r\n    </ScrollView>\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_corporate_sign_up.xml b/app/src/main/res/layout/activity_corporate_sign_up.xml
--- a/app/src/main/res/layout/activity_corporate_sign_up.xml	(revision 23234ed9e346b8ad484d179cb3cf766e52e29e0b)
+++ b/app/src/main/res/layout/activity_corporate_sign_up.xml	(date 1694524236125)
@@ -145,20 +145,21 @@
                     android:textAppearance="@style/TextLabel" />
             </com.google.android.material.textfield.TextInputLayout>
 
-            <!--이메일-->
+
+            <!--이름-->
             <TextView
-                android:id="@+id/email_textview"
+                android:id="@+id/name_textview"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:layout_marginStart="40dp"
                 android:layout_marginTop="20dp"
-                android:text="이메일"
+                android:text="인사 담당자 이름"
                 android:textColor="@color/black"
                 android:textSize="15sp"
                 android:textStyle="bold" />
 
             <com.google.android.material.textfield.TextInputLayout
-                android:id="@+id/email_textview_input_layout"
+                android:id="@+id/name_textview_input_layout"
                 style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
@@ -166,35 +167,28 @@
                 android:layout_marginTop="10dp">
 
                 <com.google.android.material.textfield.TextInputEditText
-                    android:id="@+id/email_textview_input_edit_text"
+                    android:id="@+id/name_textview_input_edit_text"
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
-                    android:hint="예) keepwork@naver.com"
+                    android:hint="예) 홍길동"
                     android:textAppearance="@style/TextLabel" />
-
-                <Button
-                    android:id="@+id/btnEmailCertify"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_gravity="end"
-                    android:layout_marginTop="5dp"
-                    android:text="이메일 인증" />
             </com.google.android.material.textfield.TextInputLayout>
 
-            <!--이름-->
+
+            <!--이메일-->
             <TextView
-                android:id="@+id/name_textview"
+                android:id="@+id/email_textview"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:layout_marginStart="40dp"
                 android:layout_marginTop="20dp"
-                android:text="인사 담당자 이름"
+                android:text="이메일"
                 android:textColor="@color/black"
                 android:textSize="15sp"
                 android:textStyle="bold" />
 
             <com.google.android.material.textfield.TextInputLayout
-                android:id="@+id/name_textview_input_layout"
+                android:id="@+id/email_textview_input_layout"
                 style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
@@ -202,11 +196,19 @@
                 android:layout_marginTop="10dp">
 
                 <com.google.android.material.textfield.TextInputEditText
-                    android:id="@+id/name_textview_input_edit_text"
+                    android:id="@+id/email_textview_input_edit_text"
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
-                    android:hint="예) 홍길동"
+                    android:hint="예) keepwork@naver.com"
                     android:textAppearance="@style/TextLabel" />
+
+                <!--                <Button-->
+                <!--                    android:id="@+id/btnEmailCertify"-->
+                <!--                    android:layout_width="wrap_content"-->
+                <!--                    android:layout_height="wrap_content"-->
+                <!--                    android:layout_gravity="end"-->
+                <!--                    android:layout_marginTop="5dp"-->
+                <!--                    android:text="이메일 인증" />-->
             </com.google.android.material.textfield.TextInputLayout>
 
             <!--전화번호-->
@@ -302,7 +304,7 @@
                 android:layout_marginTop="10dp">
 
                 <com.google.android.material.textfield.TextInputEditText
-                    android:id="@+id/restrationNum_textview_input_edit_text"
+                    android:id="@+id/registrationNum_textview_input_edit_text"
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
                     android:hint="예) xxx-xx-xxxxx"
@@ -325,11 +327,10 @@
                 android:textSize="15sp"
                 android:textStyle="bold" />
             <TextView
-                android:id="@+id/_textview"
+                android:id="@+id/ceoName_textview"
                 android:layout_width="0dp"
                 android:layout_weight="1"
                 android:layout_height="wrap_content"
-                android:layout_marginStart="40dp"
                 android:layout_marginTop="20dp"
                 android:text="대표명"
                 android:textColor="@color/black"
@@ -362,7 +363,7 @@
                 </com.google.android.material.textfield.TextInputLayout>
 
                 <com.google.android.material.textfield.TextInputLayout
-                    android:id="@+id/_textview_input_layout"
+                    android:id="@+id/ceoName_textview_input_layout"
                     style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
                     android:layout_width="0dp"
                     android:layout_height="wrap_content"
@@ -372,7 +373,7 @@
                     android:layout_marginEnd="40dp">
 
                     <com.google.android.material.textfield.TextInputEditText
-                        android:id="@+id/_textview_input_edit_text"
+                        android:id="@+id/ceoName_textview_input_edit_text"
                         android:layout_width="match_parent"
                         android:layout_height="wrap_content"
                         android:hint=" "
@@ -380,6 +381,34 @@
                 </com.google.android.material.textfield.TextInputLayout>
             </LinearLayout>
 
+            <!--회사주소-->
+            <TextView
+                android:id="@+id/companyAddress_textview"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="40dp"
+                android:layout_marginTop="20dp"
+                android:text="회사 주소"
+                android:textColor="@color/black"
+                android:textSize="15sp"
+                android:textStyle="bold" />
+
+            <com.google.android.material.textfield.TextInputLayout
+                android:id="@+id/companyAddress_textview_input_layout"
+                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginHorizontal="40dp"
+                android:layout_marginTop="10dp">
+
+                <com.google.android.material.textfield.TextInputEditText
+                    android:id="@+id/companyAddress_textview_input_edit_text"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:hint="예) 서울특별시 노원구 화랑로 621 (공릉동)"
+                    android:textAppearance="@style/TextLabel" />
+            </com.google.android.material.textfield.TextInputLayout>
+
             <LinearLayout
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
@@ -400,7 +429,6 @@
                     android:layout_width="0dp"
                     android:layout_weight="1"
                     android:layout_height="wrap_content"
-                    android:layout_marginStart="40dp"
                     android:layout_marginTop="20dp"
                     android:text="직원수"
                     android:textColor="@color/black"
@@ -408,6 +436,8 @@
                     android:textStyle="bold"
                     />
             </LinearLayout>
+
+
             <LinearLayout
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
@@ -451,34 +481,6 @@
                 </com.google.android.material.textfield.TextInputLayout>
             </LinearLayout>
 
-            <!--회사주소-->
-            <TextView
-                android:id="@+id/companyAddress_textview"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginStart="40dp"
-                android:layout_marginTop="20dp"
-                android:text="회사 주소"
-                android:textColor="@color/black"
-                android:textSize="15sp"
-                android:textStyle="bold" />
-
-            <com.google.android.material.textfield.TextInputLayout
-                android:id="@+id/companyAddress_textview_input_layout"
-                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginHorizontal="40dp"
-                android:layout_marginTop="10dp">
-
-                <com.google.android.material.textfield.TextInputEditText
-                    android:id="@+id/companyAddress_textview_input_edit_text"
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:hint="예) 서울특별시 노원구 화랑로 621 (공릉동)"
-                    android:textAppearance="@style/TextLabel" />
-            </com.google.android.material.textfield.TextInputLayout>
-
             <TextView
                 android:id="@+id/companyClassification_textview"
                 android:layout_width="wrap_content"
@@ -495,8 +497,7 @@
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:layout_marginTop="10dp"
-                android:layout_marginStart="20dp"
-                android:layout_marginEnd="40dp"
+                android:layout_marginStart="40dp"
                 android:spinnerMode="dropdown"/>
 
             <!--회원가입 버튼-->
Index: app/src/main/java/com/example/a23_hf069/RetrofitInterface.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.a23_hf069\r\n\r\nimport JobPosting\r\nimport retrofit2.Call\r\nimport retrofit2.http.Body\r\nimport retrofit2.http.GET\r\nimport retrofit2.http.Query\r\nimport retrofit2.http.POST\r\n\r\ninterface RetrofitInterface {\r\n    companion object {\r\n        const val API_URL = \"http://13.125.126.74:8000/\"\r\n    }\r\n    @GET(\"keepwork/member_personal/\")\r\n    fun getData(@Query(\"personal_id\") id: String): Call<List<P_MemberModel>>\r\n\r\n    @POST(\"keepwork/member_personal/\")\r\n    fun postData(@Body data: P_MemberModel): Call<P_MemberModel>\r\n\r\n    @GET(\"keepwork/member_company/\")\r\n    fun getCorporateData(@Query(\"company_id\") id: String): Call<List<C_MemberModel>> // 추가: C_MemberModel 사용\r\n\r\n    @GET(\"keepwork/job/\")\r\n    fun getJobPostingData(@Query(\"company_id\") id: String): Call<List<JobPosting>>\r\n\r\n    @GET(\"keepwork/notice/\")\r\n    fun getNoticeData(\r\n        @Query(\"notice_listnum\") noticeListNum: Int?,\r\n        @Query(\"notice_title\") noticeTitle: String?,\r\n        @Query(\"notice_content\") noticeContent: Int?,\r\n        @Query(\"notice_date\") noticeDate : String?\r\n    ): Call<List<NoticeModel>>\r\n\r\n    @GET(\"keepwork/resume/\")\r\n    fun getResumeData(\r\n        @Query(\"personal_id_id\") personalId2: String?,\r\n        @Query(\"resume_listnum\") resumeListnum: Int?,\r\n        @Query(\"resume_title\") resumeTitle: String?,\r\n        @Query(\"resume_academic\") resumeAcademic: String?,\r\n        @Query(\"resume_career\") resumeCareer: String?,\r\n        @Query(\"resume_introduction\") resumeIntroduction: String?,\r\n        @Query(\"resume_certificate\") resumeCertificate: String?,\r\n        @Query(\"resume_learning\") resumeLearning: String?,\r\n        @Query(\"resume_desire\") resumeDesire: String?,\r\n        @Query(\"resume_complete\") resumeComplete: String?\r\n    ): Call<List<ResumeModel>>\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/a23_hf069/RetrofitInterface.kt b/app/src/main/java/com/example/a23_hf069/RetrofitInterface.kt
--- a/app/src/main/java/com/example/a23_hf069/RetrofitInterface.kt	(revision 23234ed9e346b8ad484d179cb3cf766e52e29e0b)
+++ b/app/src/main/java/com/example/a23_hf069/RetrofitInterface.kt	(date 1694527148007)
@@ -20,6 +20,9 @@
     @GET("keepwork/member_company/")
     fun getCorporateData(@Query("company_id") id: String): Call<List<C_MemberModel>> // 추가: C_MemberModel 사용
 
+    @POST("keepwork/member_company/")
+    fun postCorporateData(@Body data: C_MemberModel): Call<C_MemberModel>
+
     @GET("keepwork/job/")
     fun getJobPostingData(@Query("company_id") id: String): Call<List<JobPosting>>
 
