Index: app/src/main/java/com/example/a23_hf069/ResumeWriteActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.a23_hf069\r\n\r\nimport android.os.Bundle\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.widget.Button\r\nimport android.widget.EditText\r\nimport android.widget.ImageButton\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport okhttp3.*\r\nimport java.io.IOException\r\n\r\nclass ResumeWriteActivity : AppCompatActivity() {\r\n    private var IP_ADDRESS = \"54.180.186.168\" // Replace with your IP address.\r\n    private var userId: String = \"\" // User ID\r\n    private lateinit var backButton: ImageButton\r\n    private lateinit var editResumeTitle: EditText\r\n    private lateinit var editTextAcademic: EditText\r\n    private lateinit var editTextCareer: EditText\r\n    private lateinit var editTextIntroduction: EditText\r\n    private lateinit var editTextCertificate: EditText\r\n    private lateinit var editTextEducation: EditText\r\n    private lateinit var editTextDesire: EditText\r\n    private lateinit var buttonSubmit_temporary: Button\r\n    private lateinit var buttonSubmit_complete: Button\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        supportActionBar?.hide()\r\n        setContentView(R.layout.activity_resume_write)\r\n\r\n// Get user ID\r\n        userId = intent.getStringExtra(\"userId\") ?: \"\"\r\n\r\n        val textID = findViewById<TextView>(R.id.tvWrite_ID)\r\n        textID.text = userId\r\n\r\n        backButton = findViewById(R.id.backButton)\r\n        editTextAcademic = findViewById(R.id.edtWrite_academic)\r\n        editResumeTitle = findViewById(R.id.edtWrite_title)\r\n        editTextCareer = findViewById(R.id.edtWrite_career)\r\n        editTextIntroduction = findViewById(R.id.edtWrite_introduction)\r\n        editTextCertificate = findViewById(R.id.edtWrite_certificate)\r\n        editTextEducation = findViewById(R.id.edtWrite_education)\r\n        editTextDesire = findViewById(R.id.edtWrite_desire)\r\n        buttonSubmit_temporary = findViewById(R.id.buttonSubmit_temporary_edit) // 임시 저장 버튼\r\n        buttonSubmit_complete = findViewById(R.id.buttonSubmit_complete_edit) // 작성 완료 버튼\r\n\r\n        backButton.setOnClickListener {\r\n            onBackPressed()\r\n        }\r\n\r\n        buttonSubmit_temporary.setOnClickListener { // 임시 저장\r\n            val personal_id = userId\r\n            val resume_title = editResumeTitle.text.toString()\r\n            val resume_academic = editTextAcademic.text.toString()\r\n            val resume_career = editTextCareer.text.toString()\r\n            val resume_introduction = editTextIntroduction.text.toString()\r\n            val resume_certificate = editTextCertificate.text.toString()\r\n            val resume_learning = editTextEducation.text.toString()\r\n            val resume_desire = editTextDesire.text.toString()\r\n            val resume_complete = \"작성 중\"\r\n\r\n            sendResumeData(\r\n                personal_id,\r\n                resume_title,\r\n                resume_academic,\r\n                resume_career,\r\n                resume_introduction,\r\n                resume_certificate,\r\n                resume_learning,\r\n                resume_desire,\r\n                resume_complete\r\n            )\r\n\r\n            Toast.makeText(this, \"이력서가 임시저장되었습니다\", Toast.LENGTH_SHORT).show()\r\n\r\n            onBackPressed()\r\n        }\r\n\r\n        buttonSubmit_complete.setOnClickListener { // 작성완료\r\n            val personal_id = userId\r\n            val resume_title = editResumeTitle.text.toString()\r\n            val resume_academic = editTextAcademic.text.toString()\r\n            val resume_career = editTextCareer.text.toString()\r\n            val resume_introduction = editTextIntroduction.text.toString()\r\n            val resume_certificate = editTextCertificate.text.toString()\r\n            val resume_learning = editTextEducation.text.toString()\r\n            val resume_desire = editTextDesire.text.toString()\r\n            val resume_complete = \"작성 완료\"\r\n\r\n            sendResumeData(\r\n                personal_id,\r\n                resume_title,\r\n                resume_academic,\r\n                resume_career,\r\n                resume_introduction,\r\n                resume_certificate,\r\n                resume_learning,\r\n                resume_desire,\r\n                resume_complete\r\n            )\r\n\r\n            Toast.makeText(this, \"이력서가 작성완료되었습니다\", Toast.LENGTH_SHORT).show()\r\n\r\n            onBackPressed()\r\n        }\r\n    }\r\n\r\n    override fun onBackPressed() {\r\n        super.onBackPressed()\r\n    }\r\n\r\n\r\n    private fun sendResumeData(\r\n        personal_id: String,\r\n        resume_title: String,\r\n        resume_academic: String,\r\n        resume_career: String,\r\n        resume_introduction: String,\r\n        resume_certificate: String,\r\n        resume_learning: String,\r\n        resume_desire: String,\r\n        resume_complete: String\r\n    ) {\r\n        val url = \"http://$IP_ADDRESS/android_resume_write_php.php\" // URL of the hosting server with PHP script\r\n\r\n        val client = OkHttpClient()\r\n\r\n        val formBody = FormBody.Builder()\r\n            .add(\"personal_id\", personal_id) // ID\r\n            .add(\"resume_title\", resume_title) // Title\r\n            .add(\"resume_academic\", resume_academic) // Education\r\n            .add(\"resume_career\", resume_career) // Career\r\n            .add(\"resume_introduction\", resume_introduction) // Introduction\r\n            .add(\"resume_certificate\", resume_certificate) // Certification\r\n            .add(\"resume_learning\", resume_learning) // Education history\r\n            .add(\"resume_desire\", resume_desire) // Desired job position\r\n            .add(\"resume_complete\", resume_complete)\r\n            .build()\r\n\r\n        val request = Request.Builder()\r\n            .url(url)\r\n            .post(formBody)\r\n            .build()\r\n\r\n        client.newCall(request).enqueue(object : okhttp3.Callback {\r\n            override fun onFailure(call: Call, e: IOException) {\r\n// Handle request failure\r\n                e.printStackTrace()\r\n            }\r\n\r\n            override fun onResponse(call: Call, response: Response) {\r\n// Handle request success\r\n                val responseData = response.body?.string()\r\n            }\r\n        })\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/a23_hf069/ResumeWriteActivity.kt b/app/src/main/java/com/example/a23_hf069/ResumeWriteActivity.kt
--- a/app/src/main/java/com/example/a23_hf069/ResumeWriteActivity.kt	(revision 04029e6fa85e9d7c858ccc3d8a64c60c8adfa502)
+++ b/app/src/main/java/com/example/a23_hf069/ResumeWriteActivity.kt	(date 1693400174004)
@@ -1,5 +1,7 @@
 package com.example.a23_hf069
 
+import android.content.Intent
+import android.media.Image
 import android.os.Bundle
 import androidx.appcompat.app.AppCompatActivity
 import android.widget.Button
@@ -23,137 +25,151 @@
     private lateinit var editTextDesire: EditText
     private lateinit var buttonSubmit_temporary: Button
     private lateinit var buttonSubmit_complete: Button
+    private lateinit var educationPlus: ImageButton
+    private lateinit var careerPlus: ImageButton
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         supportActionBar?.hide()
-        setContentView(R.layout.activity_resume_write)
+        setContentView(R.layout.activity_resume_click2)
 
 // Get user ID
-        userId = intent.getStringExtra("userId") ?: ""
-
-        val textID = findViewById<TextView>(R.id.tvWrite_ID)
-        textID.text = userId
-
-        backButton = findViewById(R.id.backButton)
-        editTextAcademic = findViewById(R.id.edtWrite_academic)
-        editResumeTitle = findViewById(R.id.edtWrite_title)
-        editTextCareer = findViewById(R.id.edtWrite_career)
-        editTextIntroduction = findViewById(R.id.edtWrite_introduction)
-        editTextCertificate = findViewById(R.id.edtWrite_certificate)
-        editTextEducation = findViewById(R.id.edtWrite_education)
-        editTextDesire = findViewById(R.id.edtWrite_desire)
-        buttonSubmit_temporary = findViewById(R.id.buttonSubmit_temporary_edit) // 임시 저장 버튼
-        buttonSubmit_complete = findViewById(R.id.buttonSubmit_complete_edit) // 작성 완료 버튼
-
-        backButton.setOnClickListener {
-            onBackPressed()
-        }
-
-        buttonSubmit_temporary.setOnClickListener { // 임시 저장
-            val personal_id = userId
-            val resume_title = editResumeTitle.text.toString()
-            val resume_academic = editTextAcademic.text.toString()
-            val resume_career = editTextCareer.text.toString()
-            val resume_introduction = editTextIntroduction.text.toString()
-            val resume_certificate = editTextCertificate.text.toString()
-            val resume_learning = editTextEducation.text.toString()
-            val resume_desire = editTextDesire.text.toString()
-            val resume_complete = "작성 중"
-
-            sendResumeData(
-                personal_id,
-                resume_title,
-                resume_academic,
-                resume_career,
-                resume_introduction,
-                resume_certificate,
-                resume_learning,
-                resume_desire,
-                resume_complete
-            )
-
-            Toast.makeText(this, "이력서가 임시저장되었습니다", Toast.LENGTH_SHORT).show()
-
-            onBackPressed()
-        }
-
-        buttonSubmit_complete.setOnClickListener { // 작성완료
-            val personal_id = userId
-            val resume_title = editResumeTitle.text.toString()
-            val resume_academic = editTextAcademic.text.toString()
-            val resume_career = editTextCareer.text.toString()
-            val resume_introduction = editTextIntroduction.text.toString()
-            val resume_certificate = editTextCertificate.text.toString()
-            val resume_learning = editTextEducation.text.toString()
-            val resume_desire = editTextDesire.text.toString()
-            val resume_complete = "작성 완료"
+//        userId = intent.getStringExtra("userId") ?: ""
 
-            sendResumeData(
-                personal_id,
-                resume_title,
-                resume_academic,
-                resume_career,
-                resume_introduction,
-                resume_certificate,
-                resume_learning,
-                resume_desire,
-                resume_complete
-            )
+//        val textID = findViewById<TextView>(R.id.tvWrite_ID)
+//        textID.text = userId
+//
+//        backButton = findViewById(R.id.backButton)
+//        editTextAcademic = findViewById(R.id.edtWrite_academic)
+//        editResumeTitle = findViewById(R.id.edtWrite_title)
+//        editTextCareer = findViewById(R.id.edtWrite_career)
+//        editTextIntroduction = findViewById(R.id.edtWrite_introduction)
+//        editTextCertificate = findViewById(R.id.edtWrite_certificate)
+//        editTextEducation = findViewById(R.id.edtWrite_education)
+//        editTextDesire = findViewById(R.id.edtWrite_desire)
+//        buttonSubmit_temporary = findViewById(R.id.buttonSubmit_temporary_edit) // 임시 저장 버튼
+//        buttonSubmit_complete = findViewById(R.id.buttonSubmit_complete_edit) // 작성 완료 버튼
+        educationPlus = findViewById(R.id.education_plus)
+        careerPlus = findViewById(R.id.career_plus)
 
-            Toast.makeText(this, "이력서가 작성완료되었습니다", Toast.LENGTH_SHORT).show()
+//        educationPlus.setOnClickListener {
+//            val intent = Intent(this@ResumeWriteActivity, EducationActivity::class.java)
+//            startActivity(intent)
+//        }
+//
+//        careerPlus.setOnClickListener {
+//            val intent = Intent(this@ResumeWriteActivity, FindPersonalIdActivity::class.java)
+//            startActivity(intent)
+//        }
 
-            onBackPressed()
-        }
+//        backButton.setOnClickListener {
+//            onBackPressed()
+//        }
+//
+//        buttonSubmit_temporary.setOnClickListener { // 임시 저장
+//            val personal_id = userId
+//            val resume_title = editResumeTitle.text.toString()
+//            val resume_academic = editTextAcademic.text.toString()
+//            val resume_career = editTextCareer.text.toString()
+//            val resume_introduction = editTextIntroduction.text.toString()
+//            val resume_certificate = editTextCertificate.text.toString()
+//            val resume_learning = editTextEducation.text.toString()
+//            val resume_desire = editTextDesire.text.toString()
+//            val resume_complete = "작성 중"
+//
+//            sendResumeData(
+//                personal_id,
+//                resume_title,
+//                resume_academic,
+//                resume_career,
+//                resume_introduction,
+//                resume_certificate,
+//                resume_learning,
+//                resume_desire,
+//                resume_complete
+//            )
+//
+//            Toast.makeText(this, "이력서가 임시저장되었습니다", Toast.LENGTH_SHORT).show()
+//
+//            onBackPressed()
+//        }
+//
+//        buttonSubmit_complete.setOnClickListener { // 작성완료
+//            val personal_id = userId
+//            val resume_title = editResumeTitle.text.toString()
+//            val resume_academic = editTextAcademic.text.toString()
+//            val resume_career = editTextCareer.text.toString()
+//            val resume_introduction = editTextIntroduction.text.toString()
+//            val resume_certificate = editTextCertificate.text.toString()
+//            val resume_learning = editTextEducation.text.toString()
+//            val resume_desire = editTextDesire.text.toString()
+//            val resume_complete = "작성 완료"
+//
+//            sendResumeData(
+//                personal_id,
+//                resume_title,
+//                resume_academic,
+//                resume_career,
+//                resume_introduction,
+//                resume_certificate,
+//                resume_learning,
+//                resume_desire,
+//                resume_complete
+//            )
+//
+//            Toast.makeText(this, "이력서가 작성완료되었습니다", Toast.LENGTH_SHORT).show()
+//
+//            onBackPressed()
+//        }
     }
-
-    override fun onBackPressed() {
-        super.onBackPressed()
-    }
-
-
-    private fun sendResumeData(
-        personal_id: String,
-        resume_title: String,
-        resume_academic: String,
-        resume_career: String,
-        resume_introduction: String,
-        resume_certificate: String,
-        resume_learning: String,
-        resume_desire: String,
-        resume_complete: String
-    ) {
-        val url = "http://$IP_ADDRESS/android_resume_write_php.php" // URL of the hosting server with PHP script
-
-        val client = OkHttpClient()
-
-        val formBody = FormBody.Builder()
-            .add("personal_id", personal_id) // ID
-            .add("resume_title", resume_title) // Title
-            .add("resume_academic", resume_academic) // Education
-            .add("resume_career", resume_career) // Career
-            .add("resume_introduction", resume_introduction) // Introduction
-            .add("resume_certificate", resume_certificate) // Certification
-            .add("resume_learning", resume_learning) // Education history
-            .add("resume_desire", resume_desire) // Desired job position
-            .add("resume_complete", resume_complete)
-            .build()
-
-        val request = Request.Builder()
-            .url(url)
-            .post(formBody)
-            .build()
-
-        client.newCall(request).enqueue(object : okhttp3.Callback {
-            override fun onFailure(call: Call, e: IOException) {
-// Handle request failure
-                e.printStackTrace()
-            }
-
-            override fun onResponse(call: Call, response: Response) {
-// Handle request success
-                val responseData = response.body?.string()
-            }
-        })
-    }
+//
+//    override fun onBackPressed() {
+//        super.onBackPressed()
+//    }
+//
+//
+//    private fun sendResumeData(
+//        personal_id: String,
+//        resume_title: String,
+//        resume_academic: String,
+//        resume_career: String,
+//        resume_introduction: String,
+//        resume_certificate: String,
+//        resume_learning: String,
+//        resume_desire: String,
+//        resume_complete: String
+//    ) {
+//        val url = "http://$IP_ADDRESS/android_resume_write_php.php" // URL of the hosting server with PHP script
+//
+//        val client = OkHttpClient()
+//
+//        val formBody = FormBody.Builder()
+//            .add("personal_id", personal_id) // ID
+//            .add("resume_title", resume_title) // Title
+//            .add("resume_academic", resume_academic) // Education
+//            .add("resume_career", resume_career) // Career
+//            .add("resume_introduction", resume_introduction) // Introduction
+//            .add("resume_certificate", resume_certificate) // Certification
+//            .add("resume_learning", resume_learning) // Education history
+//            .add("resume_desire", resume_desire) // Desired job position
+//            .add("resume_complete", resume_complete)
+//            .build()
+//
+//        val request = Request.Builder()
+//            .url(url)
+//            .post(formBody)
+//            .build()
+//
+//        client.newCall(request).enqueue(object : okhttp3.Callback {
+//            override fun onFailure(call: Call, e: IOException) {
+//// Handle request failure
+//                e.printStackTrace()
+//            }
+//
+//            override fun onResponse(call: Call, response: Response) {
+//// Handle request success
+//                val responseData = response.body?.string()
+//            }
+//        })
+//    }
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_resume_click2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".MainActivity\">\r\n\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/toolbarResume_click\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"?attr/actionBarSize\"\r\n        android:background=\"?attr/colorPrimary\">\r\n\r\n        <ImageButton\r\n            android:id=\"@+id/backButton_click\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"start|center_vertical\"\r\n            android:background=\"@null\"\r\n            android:src=\"@drawable/ic_baseline_arrow_back_ios_new_24\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageViewLogo_click\"\r\n            android:layout_width=\"324dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:srcCompat=\"@drawable/ic_main_logo\" />\r\n\r\n    </androidx.appcompat.widget.Toolbar>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\"\r\n        android:padding=\"16dp\">\r\n\r\n        <ScrollView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\">\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginBottom=\"16dp\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tvClick_line1\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginRight=\"3dp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:text=\"|\"\r\n                        android:textColor=\"#35B790\"\r\n                        android:textSize=\"30sp\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tvClick_ID\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:text=\"아이디\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"24dp\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tvResume_click\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:text=\" 님의 이력서 작성\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"22dp\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tvClick_line2\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginLeft=\"3dp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:text=\"|\"\r\n                        android:textColor=\"#35B790\"\r\n                        android:textSize=\"30sp\"\r\n                        android:textStyle=\"bold\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginBottom=\"16dp\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tvClick_line3\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginRight=\"3dp\"\r\n                        android:text=\"[\"\r\n                        android:textColor=\"#35B790\"\r\n                        android:textSize=\"30sp\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/edtClick_title\"\r\n                        android:layout_width=\"359dp\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:background=\"@null\"\r\n                        android:hint=\"이력서의 제목을 입력하세요\"\r\n                        android:textAlignment=\"center\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"20dp\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tvClick_line4\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginRight=\"3dp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:text=\"]\"\r\n                        android:textColor=\"#35B790\"\r\n                        android:textSize=\"30sp\"\r\n                        android:textStyle=\"bold\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginBottom=\"16dp\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:orientation=\"horizontal\">\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/tvClick_line5\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginRight=\"3dp\"\r\n                            android:text=\"|\"\r\n                            android:textColor=\"#35B790\"\r\n                            android:textSize=\"30sp\"\r\n                            android:textStyle=\"bold\" />\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/tvClick_academic\"\r\n                            android:layout_width=\"100dp\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginBottom=\"2dp\"\r\n                            android:text=\"학력 사항\"\r\n                            android:textColor=\"#000000\"\r\n                            android:textSize=\"20dp\" />\r\n\r\n                        <ImageButton\r\n                            android:layout_width=\"30dp\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:layout_marginLeft=\"235dp\"\r\n                            android:background=\"@android:color/transparent\"\r\n                            app:srcCompat=\"@drawable/plus_button\" />\r\n                    </LinearLayout>\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginBottom=\"16dp\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:orientation=\"horizontal\">\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/tvClick_line6\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginRight=\"3dp\"\r\n                            android:text=\"|\"\r\n                            android:textColor=\"#35B790\"\r\n                            android:textSize=\"30sp\"\r\n                            android:textStyle=\"bold\" />\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/tvClick_career\"\r\n                            android:layout_width=\"100dp\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginBottom=\"2dp\"\r\n                            android:text=\"경력 사항\"\r\n                            android:textColor=\"#000000\"\r\n                            android:textSize=\"20dp\" />\r\n\r\n                        <ImageButton\r\n                            android:layout_width=\"30dp\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:layout_marginLeft=\"235dp\"\r\n                            android:background=\"@android:color/transparent\"\r\n                            app:srcCompat=\"@drawable/plus_button\" />\r\n                    </LinearLayout>\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginBottom=\"16dp\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:orientation=\"horizontal\">\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/tvClick_line7\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginRight=\"3dp\"\r\n                            android:text=\"|\"\r\n                            android:textColor=\"#35B790\"\r\n                            android:textSize=\"30sp\"\r\n                            android:textStyle=\"bold\" />\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/tvClick_introduction\"\r\n                            android:layout_width=\"100dp\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginBottom=\"2dp\"\r\n                            android:text=\"자격증\"\r\n                            android:textColor=\"@color/black\"\r\n                            android:textSize=\"20dp\" />\r\n\r\n                        <ImageButton\r\n                            android:layout_width=\"30dp\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:layout_marginLeft=\"235dp\"\r\n                            android:background=\"@android:color/transparent\"\r\n                            app:srcCompat=\"@drawable/plus_button\" />\r\n                    </LinearLayout>\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginBottom=\"16dp\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:orientation=\"horizontal\">\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/tvClick_line9\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginRight=\"3dp\"\r\n                            android:text=\"|\"\r\n                            android:textColor=\"#35B790\"\r\n                            android:textSize=\"30sp\"\r\n                            android:textStyle=\"bold\" />\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/tvClick_learning\"\r\n                            android:layout_width=\"100dp\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginBottom=\"2dp\"\r\n                            android:text=\"어학\"\r\n                            android:textColor=\"@color/black\"\r\n                            android:textSize=\"20dp\" />\r\n\r\n                        <ImageButton\r\n                            android:layout_width=\"30dp\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:layout_marginLeft=\"235dp\"\r\n                            android:background=\"@android:color/transparent\"\r\n                            app:srcCompat=\"@drawable/plus_button\" />\r\n                    </LinearLayout>\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginBottom=\"16dp\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:orientation=\"horizontal\">\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/tvClick_line10\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginRight=\"3dp\"\r\n                            android:text=\"|\"\r\n                            android:textColor=\"#35B790\"\r\n                            android:textSize=\"30sp\"\r\n                            android:textStyle=\"bold\" />\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/tvClick_desire\"\r\n                            android:layout_width=\"100dp\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginBottom=\"2dp\"\r\n                            android:text=\"교육\"\r\n                            android:textColor=\"@color/black\"\r\n                            android:textSize=\"20dp\" />\r\n\r\n                        <ImageButton\r\n                            android:layout_width=\"30dp\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:layout_marginLeft=\"235dp\"\r\n                            android:background=\"@android:color/transparent\"\r\n                            app:srcCompat=\"@drawable/plus_button\" />\r\n                    </LinearLayout>\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginBottom=\"16dp\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:orientation=\"horizontal\">\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/tvClick_line12\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginRight=\"3dp\"\r\n                            android:text=\"|\"\r\n                            android:textColor=\"#35B790\"\r\n                            android:textSize=\"30sp\"\r\n                            android:textStyle=\"bold\" />\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/tvClick_award\"\r\n                            android:layout_width=\"100dp\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginBottom=\"2dp\"\r\n                            android:text=\"수상\"\r\n                            android:textColor=\"@color/black\"\r\n                            android:textSize=\"20dp\" />\r\n\r\n                        <ImageButton\r\n                            android:layout_width=\"30dp\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:layout_marginLeft=\"235dp\"\r\n                            android:background=\"@android:color/transparent\"\r\n                            app:srcCompat=\"@drawable/plus_button\" />\r\n                    </LinearLayout>\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginBottom=\"16dp\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:orientation=\"horizontal\">\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/tvClick_line13\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginRight=\"3dp\"\r\n                            android:text=\"|\"\r\n                            android:textColor=\"#35B790\"\r\n                            android:textSize=\"30sp\"\r\n                            android:textStyle=\"bold\" />\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/tvClick_preferential\"\r\n                            android:layout_width=\"100dp\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginBottom=\"2dp\"\r\n                            android:text=\"우대 사항\"\r\n                            android:textColor=\"@color/black\"\r\n                            android:textSize=\"20dp\" />\r\n\r\n                        <ImageButton\r\n                            android:layout_width=\"30dp\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:layout_marginLeft=\"235dp\"\r\n                            android:background=\"@android:color/transparent\"\r\n                            app:srcCompat=\"@drawable/plus_button\" />\r\n                    </LinearLayout>\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginBottom=\"16dp\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:orientation=\"horizontal\">\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/tvClick_line11\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginRight=\"3dp\"\r\n                            android:text=\"|\"\r\n                            android:textColor=\"#35B790\"\r\n                            android:textSize=\"30sp\"\r\n                            android:textStyle=\"bold\" />\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/tvClick_self_introduction\"\r\n                            android:layout_width=\"100dp\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginBottom=\"2dp\"\r\n                            android:text=\"자기소개서\"\r\n                            android:textColor=\"@color/black\"\r\n                            android:textSize=\"20dp\" />\r\n\r\n                        <ImageButton\r\n                            android:layout_width=\"30dp\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:layout_marginLeft=\"235dp\"\r\n                            android:background=\"@android:color/transparent\"\r\n                            app:srcCompat=\"@drawable/plus_button\" />\r\n                    </LinearLayout>\r\n                </LinearLayout>\r\n            </LinearLayout>\r\n        </ScrollView>\r\n    </LinearLayout>\r\n</LinearLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_resume_click2.xml b/app/src/main/res/layout/activity_resume_click2.xml
--- a/app/src/main/res/layout/activity_resume_click2.xml	(revision 04029e6fa85e9d7c858ccc3d8a64c60c8adfa502)
+++ b/app/src/main/res/layout/activity_resume_click2.xml	(date 1693400043742)
@@ -160,6 +160,7 @@
                             android:textSize="20dp" />
 
                         <ImageButton
+                            android:id="@+id/education_plus"
                             android:layout_width="30dp"
                             android:layout_height="match_parent"
                             android:layout_marginLeft="235dp"
@@ -199,6 +200,7 @@
                             android:textSize="20dp" />
 
                         <ImageButton
+                            android:id="@+id/career_plus"
                             android:layout_width="30dp"
                             android:layout_height="match_parent"
                             android:layout_marginLeft="235dp"
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.example.a23_hf069\">\r\n    <!-- 인터넷 사용 권한 설정 -->\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <!--카메라 사용권한 설정-->\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:networkSecurityConfig=\"@xml/network_security_config\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.23_HF069\"\r\n        android:usesCleartextTraffic=\"true\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".CorporateHomeActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".TalentManagementFragment\"\r\n            android:exported=\"false\"\r\n            tools:ignore=\"Instantiatable\" />\r\n        <activity\r\n            android:name=\".FindPersonalIdActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".MemberInfoEditActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".NoticeActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".NoticeContentActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ResumeClickActivity\"\r\n            android:exported=\"false\" />\r\n        <!--\r\n<activity\r\n            android:name=\".SaeilSearchActivity\"\r\n            android:exported=\"false\" />\r\n        -->\r\n        <activity\r\n            android:name=\".CorporateSignUpActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".PersonalSignUpActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".HomeActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".JobDetailActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.VIEW\" />\r\n\r\n                <category android:name=\"android.intent.category.DEFAULT\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".ResumeChangeActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ResumeWriteActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 04029e6fa85e9d7c858ccc3d8a64c60c8adfa502)
+++ b/app/src/main/AndroidManifest.xml	(date 1693400437570)
@@ -1,16 +1,13 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    package="com.example.a23_hf069">
+    xmlns:tools="http://schemas.android.com/tools">
     <!-- 인터넷 사용 권한 설정 -->
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
-    <uses-permission android:name="android.permission.INTERNET" />
-    <!--카메라 사용권한 설정-->
+    <uses-permission android:name="android.permission.INTERNET" /> <!-- 카메라 사용권한 설정 -->
     <uses-permission android:name="android.permission.CAMERA" />
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
 
-
     <application
         android:allowBackup="true"
         android:dataExtractionRules="@xml/data_extraction_rules"
@@ -23,6 +20,14 @@
         android:theme="@style/Theme.23_HF069"
         android:usesCleartextTraffic="true"
         tools:targetApi="31">
+<!--        <activity-->
+<!--            android:name=".RecruitEducationActivity"-->
+<!--            android:exported="false"-->
+<!--            android:theme="@style/Theme.23_HF069" />-->
+<!--        <activity-->
+<!--            android:name=".RecruitCareerActivity"-->
+<!--            android:exported="false"-->
+<!--            android:theme="@style/Theme.23_HF069" />-->
         <activity
             android:name=".CorporateHomeActivity"
             android:exported="false" />
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2023-08-25__6_26__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-08-25__6_26__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2023-08-25__6_26__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-08-25__6_26__Changes_.xml	(revision 04029e6fa85e9d7c858ccc3d8a64c60c8adfa502)
+++ /dev/null	(revision 04029e6fa85e9d7c858ccc3d8a64c60c8adfa502)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2023-08-25_오후_6_26_[Changes]" date="1692955618477" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023-08-25_오후_6_26_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2023-08-25 오후 6:26 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2023-08-25_오후_6_26_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-08-25_오후_6_26_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2023-08-25_오후_6_26_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-08-25_오후_6_26_[Changes]/shelved.patch	(revision 04029e6fa85e9d7c858ccc3d8a64c60c8adfa502)
+++ /dev/null	(revision 04029e6fa85e9d7c858ccc3d8a64c60c8adfa502)
@@ -1,321 +0,0 @@
-Index: app/src/main/java/com/example/a23_hf069/WantedFilteringFragment.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.a23_hf069\r\n\r\n\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.text.TextUtils.split\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.*\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.core.content.ContentProviderCompat.requireContext\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.fragment.app.activityViewModels\r\nimport com.example.a23_hf069.*\r\nimport okhttp3.*\r\nimport org.xmlpull.v1.XmlPullParser\r\nimport org.xmlpull.v1.XmlPullParserFactory\r\nimport java.io.IOException\r\nimport java.io.StringReader\r\nimport java.time.LocalDate\r\nimport java.time.format.DateTimeFormatter\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\n\r\nclass WantedFilteringFragment : Fragment() {\r\n    private val baseUrl =\r\n        \"http://openapi.work.go.kr/opi/opi/opia/wantedApi.do?authKey=WNLJYZLM2VZXTT2TZA9XR2VR1HK&callTp=L&returnType=XML&display=100\"\r\n    private var page = 1\r\n\r\n    //완료 버튼\r\n    lateinit var complete_btn: Button\r\n\r\n    //지역,직종 선택 버튼\r\n    lateinit var regioncl_btn: Button\r\n    lateinit var jobcl_btn: Button\r\n\r\n    lateinit var tv_jobcl_selected: TextView\r\n    lateinit var tv_regioncl_selected: TextView\r\n    lateinit var selectedJob: String\r\n    lateinit var selectedRegion: String\r\n\r\n    //직종 코드\r\n    private lateinit var selectedJobCodes: String\r\n\r\n    //라디오 그룹\r\n    lateinit var rgEdu: RadioGroup // 학력 라디오그룹\r\n    lateinit var rgCareer: RadioGroup // 경력 라디오그룹\r\n    lateinit var rgCloseDt: RadioGroup // 마감일 라디오그룹\r\n\r\n    private lateinit var wantedList: List<Wanted>\r\n    private val sharedSelectionViewModel: SharedSelectionViewModel by activityViewModels() // 필터링된 리스트를 전달하는 viewModel 객체 생성\r\n\r\n\r\n    // 필터링 키워드\r\n    private var keywordRegion = \"\"\r\n    private var keywordRegion2 = \"\"\r\n    private var keywordJob = \"\"\r\n    private var keywordEdu = \"\"\r\n    private var keywordCareer = \"\"\r\n    private var keywordCloseDt = \"\"\r\n    private var regionList: MutableList<String> = mutableListOf()\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        val rootView = inflater.inflate(R.layout.fragment_wanted_filtering, container, false)\r\n        return rootView\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n\r\n        //완료 버튼 초기화\r\n        complete_btn = view.findViewById<Button>(R.id.complete_btn1)\r\n        //지역 선택 초기화\r\n        regioncl_btn = view.findViewById<Button>(R.id.regioncl_btn)\r\n        jobcl_btn = view.findViewById<Button>(R.id.jobcl_btn)\r\n\r\n\r\n        tv_regioncl_selected =\r\n            view.findViewById(R.id.tv_regioncl_selected) // 선택된 지역 정보를 나타낼 TextView 초기화\r\n        tv_jobcl_selected = view.findViewById(R.id.tv_jobcl_selected) // 선택된 직종 정보를 나타낼 TextView 초기화\r\n        selectedRegion =\r\n            sharedSelectionViewModel.selectedRegion.toString() // ViewModel에서 선택된 지역 정보를 가져와서 TextView에 설정\r\n        tv_regioncl_selected.text = selectedRegion //화면에 textView 나타내기\r\n        selectedJob =\r\n            sharedSelectionViewModel.selectedJob.toString() // ViewModel에서 선택된 직종 정보를 가져와서 TextView에 설정\r\n        tv_jobcl_selected.text = selectedJob //화면에 textView 나타내기\r\n\r\n        // 전달된 직종코드 데이터를 받아서 사용\r\n        selectedJobCodes = arguments?.getString(\"selectedJobCodes\").toString()\r\n\r\n        // 라디오 그룹을 초기화\r\n        rgEdu = view.findViewById(R.id.rg_edu)\r\n        rgCareer = view.findViewById(R.id.rg_career)\r\n        rgCloseDt = view.findViewById(R.id.rg_closeDt)\r\n\r\n        // 완료 버튼이 눌렸을 때 지역,직종 변수 및 학력,경력,마감일 라디오버튼 확인 -> 선택된 조건에 해당하는 공고목록 가져와서 UI에 업데이트\r\n        complete_btn.setOnClickListener {\r\n            // 해당 라디오 그룹에서 선택된 Id를 가져오기\r\n            val checkEduId = rgEdu.checkedRadioButtonId\r\n            val checkCareerId = rgCareer.checkedRadioButtonId\r\n            val checkCloseDtId = rgCloseDt.checkedRadioButtonId\r\n\r\n            // 선택한 지역이 있을 경우 키워드에 해당 지역이름 넣기\r\n            if (selectedRegion != \"\") {\r\n                keywordRegion = sharedSelectionViewModel.keywordRegions // ex) \"서울 성동구|서울 종로구\"\r\n                keywordRegion2 = keywordRegion.replace(\" \",\"\") // ex) \"서울성동구|서울종로구\"\r\n                regionList = keywordRegion.split(\"|\").map{it.trim()}.toMutableList() //ex) [서울 성동구, 서울 종로구]\r\n\r\n            }\r\n\r\n            // 선택한 직종이 있을 경우 필터링하기\r\n            if (selectedJob != \"\") {\r\n                keywordJob = selectedJobCodes\r\n                println(keywordJob)\r\n            }\r\n\r\n            // 학력 라디오 그룹중 선택된 라디오 버튼이 있을때 처리\r\n            when (checkEduId) {\r\n                R.id.rb_e_1 -> {\r\n                    keywordEdu = \"학력무관\"\r\n                }\r\n                R.id.rb_e_2 -> {\r\n                    keywordEdu = \"고졸\"\r\n                }\r\n                R.id.rb_e_3 -> {\r\n                    keywordEdu = \"대졸(2~3년)\"\r\n                }\r\n                R.id.rb_e_4 -> {\r\n                    keywordEdu = \"대졸(4년)\"\r\n                }\r\n            }\r\n\r\n            // 경력 라디오 그룹중 선택된 라디오 버튼이 있을때 처리\r\n            when (checkCareerId) {\r\n                R.id.rb_c_1 -> {\r\n                    keywordCareer = \"관계없음\"\r\n                }\r\n                R.id.rb_c_2 -> {\r\n                    // 고등학교 졸 라디오 버튼이 선택되었을 때\r\n                    keywordCareer = \"신입\"\r\n                }\r\n                R.id.rb_c_3 -> {\r\n                    // 대학(2년제) 라디오 버튼이 선택되었을 때\r\n                    keywordCareer = \"경력\"\r\n                }\r\n            }\r\n            // 마감일 라디오 그룹중 선택된 라디오 버튼이 있을때 처리\r\n            when (checkCloseDtId) {\r\n                R.id.rb_d_1 -> {\r\n                    keywordCloseDt = \"7days\"\r\n                }\r\n                R.id.rb_d_2 -> {\r\n                    keywordCloseDt = \"30days\"\r\n                }\r\n                R.id.rb_d_3 -> {\r\n                    keywordCloseDt = \"60days\"\r\n                }\r\n            }\r\n\r\n\r\n            // 지역 조건은 필수 선택 조건으로 무조건 선택해야 함\r\n            if (keywordRegion == \"\") {\r\n                showWarningToast1() // 지역 조건을 선택하지 않은 경우 토스트창 띄우기\r\n            }\r\n            // 지역조건을 선택한 경우\r\n            else {\r\n                // 필터링 후 UI에 반영\r\n                fetchWantedList()\r\n\r\n                // 화면전환\r\n                val wantedResultFragment = WantedResultFragment()\r\n                requireActivity().supportFragmentManager.beginTransaction()\r\n                    .replace(R.id.fl_container, wantedResultFragment)\r\n                    .addToBackStack(null)\r\n                    .commit()\r\n            }\r\n\r\n        }\r\n        // complete_btn 리스너 종료\r\n\r\n        // 지역선택 버튼 눌렸을 때 지역선택 화면으로 전환\r\n        regioncl_btn.setOnClickListener {\r\n            val regionSelectionFragment = RegionSelectionFragment()\r\n            requireActivity().supportFragmentManager.beginTransaction()\r\n                .replace(R.id.fl_container, regionSelectionFragment)\r\n                .addToBackStack(null)\r\n                .commit()\r\n        }\r\n\r\n        // 직종선택 버튼 눌렸을 때 직종선택 화면으로 전환\r\n        jobcl_btn.setOnClickListener {\r\n            val jobSelectionFragment = JobWorkNetSelectionFragment()\r\n            requireActivity().supportFragmentManager.beginTransaction()\r\n                .replace(R.id.fl_container, jobSelectionFragment)\r\n                .addToBackStack(null)\r\n                .commit()\r\n        }\r\n\r\n    }\r\n\r\n    // 키워드에 해당하는 채용공고 가져와서 sharedSelectionViewModel의 리스트에 저장 -> UI에 반영\r\n    private fun fetchWantedList() {\r\n        //네트워크 연결\r\n        val client = OkHttpClient()\r\n        if(keywordRegion2.contains(\"전체\")){ // ex) 서울 전체인 경우 -> 서울로 변경\r\n            keywordRegion2.replace(\"전체\",\"\").trim()\r\n        }\r\n        val request = Request.Builder()\r\n            .url(\"$baseUrl&startPage=$page&keyword=$keywordRegion2\") // &keyword로 지역 1차 필터링하기 (이렇게 안하면 traffic 터져서 아무것도 안나옴)\r\n            .build()\r\n        var result: List<Wanted> = emptyList()\r\n\r\n        client.newCall(request).enqueue(object : Callback {\r\n            override fun onFailure(call: Call, e: IOException) {\r\n                println(e.printStackTrace())\r\n            }\r\n\r\n            @RequiresApi(Build.VERSION_CODES.O)\r\n            override fun onResponse(call: Call, response: Response) {\r\n                if (response.isSuccessful) {\r\n                    val xmlString = response.body?.string() // url에 있는 모든 글자 다가져오기\r\n                    result = parseXmlResponse(xmlString) // parsing한 후 리스트화 하기\r\n                    wantedList = result\r\n\r\n                    // 지역 2차 필터링하기\r\n                    val filteredList = wantedList.filter { it.region?.trim() in regionList }\r\n\r\n                    if(keywordEdu ==\"\" && keywordCareer == \"\"){ // 지역만 선택\r\n                        sharedSelectionViewModel.updateFilteredList(filteredList)\r\n                    }\r\n                    else if (keywordCareer.isNotEmpty() && keywordEdu == \"\") { // 경력만 선택\r\n                        val filteredList1 = filteredList.filter {// 경력 필터링\r\n                            it.career == keywordCareer\r\n                        }\r\n                        sharedSelectionViewModel.updateFilteredList(filteredList1)\r\n                    } else if (keywordEdu.isNotEmpty() && keywordCareer == \"\") { // 학력만 선택\r\n                        val filteredList1 = filteredList.filter { // 학력 필터링\r\n                            it.minEdubg == keywordEdu\r\n                        }\r\n                        sharedSelectionViewModel.updateFilteredList(filteredList1)\r\n                    } else if(keywordEdu.isNotEmpty()&&keywordCareer.isNotEmpty()){ // 경력, 학력 모두 선택\r\n                        val filteredList1 = filteredList.filter { // 경력, 학력 필터링\r\n                            it.minEdubg == keywordEdu && it.career == keywordCareer\r\n                        }\r\n                        sharedSelectionViewModel.updateFilteredList(filteredList1)\r\n                    }else if(keywordEdu ==\"\" && keywordCareer == \"\" && keywordJob.isNotEmpty()){ //지역+직종\r\n                        val filteredList1 = wantedList.filter {\r\n                            it.jobsCd == keywordJob\r\n                        }\r\n                        sharedSelectionViewModel.updateFilteredList(filteredList1)\r\n                    }\r\n                    else if(keywordEdu ==\"\" && keywordCareer.isNotEmpty() && keywordJob.isNotEmpty()){ //지역+직종+경력\r\n                        val filteredList1 = wantedList.filter {\r\n                            it.jobsCd == keywordJob && it.career == keywordCareer\r\n                        }\r\n                        sharedSelectionViewModel.updateFilteredList(filteredList1)\r\n                    }\r\n                    else if(keywordEdu.isNotEmpty() && keywordCareer ==\"\" && keywordJob.isNotEmpty()){ //지역+직종+학력\r\n                        val filteredList1 = wantedList.filter {\r\n                            it.minEdubg == keywordEdu && it.jobsCd == keywordJob\r\n                        }\r\n                        sharedSelectionViewModel.updateFilteredList(filteredList1)\r\n                    }\r\n                    else { //지역+직종+경력+학력\r\n                        val filteredList1 = wantedList.filter {\r\n                            it.minEdubg == keywordEdu && it.career == keywordCareer && it.jobsCd == keywordJob\r\n                        }\r\n                        sharedSelectionViewModel.updateFilteredList(filteredList1)\r\n                    }\r\n\r\n                    // 더 많은 페이지가 있는지 확인합니다.\r\n                    val factory = XmlPullParserFactory.newInstance()\r\n                    val xpp = factory.newPullParser()\r\n                    xpp.setInput(StringReader(xmlString))\r\n\r\n                    var eventType = xpp.eventType\r\n                    var totalItems = 0\r\n                    var totalPages = 0\r\n\r\n                    while (eventType != XmlPullParser.END_DOCUMENT) {\r\n                        if (eventType == XmlPullParser.START_TAG && xpp.name == \"total\") {\r\n                            totalItems = xpp.nextText().toInt()\r\n                            totalPages = totalItems / 100\r\n                            break\r\n                        }\r\n                        eventType = xpp.next()\r\n                    }\r\n                    // 더 많은 페이지가 있다면 다음 페이지를 가져옵니다.\r\n                    while (totalPages > page) {\r\n                        page += 1\r\n                        fetchWantedList()\r\n                    }\r\n\r\n                }// if 응답이 성공적일때\r\n                else {\r\n                    showErrorToast()\r\n                } //if 응답 실패일때\r\n            } //onResponse 함수 종료\r\n        }) //callback 종료\r\n    } // fetchWantedList 함수 종료\r\n\r\n    data class Wanted(\r\n        val company: String,\r\n        val title: String,\r\n        val salTpNm: String?,\r\n        val sal: String?,\r\n        val region: String?,\r\n        val holidayTpNm: String?,\r\n        val minEdubg: String?,\r\n        val career: String?,\r\n        val closeDt: String?,\r\n        val wantedMobileInfoUrl: String?,\r\n        val jobsCd: String?,\r\n        val infoSvc: String?\r\n    )\r\n\r\n    private fun parseXmlResponse(xmlResponse: String?): List<Wanted> {\r\n        val wantedList = mutableListOf<Wanted>()\r\n        val factory = XmlPullParserFactory.newInstance()\r\n        val xpp = factory.newPullParser()\r\n        xpp.setInput(StringReader(xmlResponse))\r\n\r\n        var eventType = xpp.eventType\r\n        var company: String? = null // 회사명\r\n        var title: String? = null // 채용제목\r\n        var salTpNm: String? = null // 임금형태\r\n        var sal: String? = null // 급여\r\n        var region: String? = null // 근무지역\r\n        var holidayTpNm: String? = null // 근무형태\r\n        var minEdubg: String? = null // 최소학력\r\n        var career: String? = null // 경력\r\n        var closeDt: String? = null // 마감일자\r\n        var wantedMobileInfoUrl: String? = null // 워크넷 모바일 채용정보 URL\r\n        var jobsCd: String? = null // 직종코드\r\n        var infoSvc: String? = null // 정보제공처\r\n\r\n        while (eventType != XmlPullParser.END_DOCUMENT) {\r\n            when (eventType) {\r\n                XmlPullParser.START_TAG -> {\r\n                    when (xpp.name) {\r\n                        \"company\" -> company = xpp.nextText()\r\n                        \"title\" -> title = xpp.nextText()\r\n                        \"salTpNm\" -> salTpNm = xpp.nextText()\r\n                        \"sal\" -> sal = xpp.nextText()\r\n                        \"region\" -> region = xpp.nextText()\r\n                        \"holidayTpNm\" -> holidayTpNm = xpp.nextText()\r\n                        \"minEdubg\" -> minEdubg = xpp.nextText()\r\n                        \"career\" -> career = xpp.nextText()\r\n                        \"closeDt\" -> closeDt = xpp.nextText()\r\n                        \"wantedMobileInfoUrl\" -> wantedMobileInfoUrl = xpp.nextText()\r\n                        \"jobsCd\" -> jobsCd = xpp.nextText()\r\n                        \"infoSvc\" -> infoSvc = xpp.nextText()\r\n                    }\r\n                }\r\n                XmlPullParser.END_TAG -> {\r\n                    if (xpp.name == \"wanted\") {\r\n                        company?.let { c ->\r\n                            title?.let { t ->\r\n                                wantedList.add(\r\n                                    Wanted(\r\n                                        c,\r\n                                        t,\r\n                                        salTpNm,\r\n                                        sal,\r\n                                        region,\r\n                                        holidayTpNm,\r\n                                        minEdubg,\r\n                                        career,\r\n                                        closeDt,\r\n                                        wantedMobileInfoUrl,\r\n                                        jobsCd,\r\n                                        infoSvc\r\n                                    )\r\n                                )\r\n                            }\r\n                        }\r\n                        company = null\r\n                        title = null\r\n                        salTpNm = null\r\n                        sal = null\r\n                        region = null\r\n                        holidayTpNm = null\r\n                        minEdubg = null\r\n                        career = null\r\n                        closeDt = null\r\n                        wantedMobileInfoUrl = null\r\n                        jobsCd = null\r\n                        infoSvc = null\r\n                    }\r\n                }\r\n            }\r\n            eventType = xpp.next()\r\n        } // while문 종료\r\n        return wantedList\r\n    }\r\n\r\n\r\n    private fun showErrorToast() {\r\n        Toast.makeText(requireContext(), \"Failed to fetch wanted list.\", Toast.LENGTH_SHORT).show()\r\n    }\r\n\r\n    private fun showWarningToast1() {\r\n        Toast.makeText(requireContext(), \"지역은 필수 선택 조건입니다.\", Toast.LENGTH_SHORT).show()\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/a23_hf069/WantedFilteringFragment.kt b/app/src/main/java/com/example/a23_hf069/WantedFilteringFragment.kt
---- a/app/src/main/java/com/example/a23_hf069/WantedFilteringFragment.kt	(revision 6761cae6ff513e9a2e0aca489564906d26148c34)
-+++ b/app/src/main/java/com/example/a23_hf069/WantedFilteringFragment.kt	(date 1692955491847)
-@@ -26,6 +26,9 @@
- class WantedFilteringFragment : Fragment() {
-     private val baseUrl =
-         "http://openapi.work.go.kr/opi/opi/opia/wantedApi.do?authKey=WNLJYZLM2VZXTT2TZA9XR2VR1HK&callTp=L&returnType=XML&display=100"
-+    private val jobUrl =
-+        "http://openapi.work.go.kr/opi/commonCode/commonCode.do?returnType=XML&target=CMCD&authKey=WNLJYZLM2VZXTT2TZA9XR2VR1HK&dtlGb=2"
-+
-     private var page = 1
- 
-     //완료 버튼
-@@ -108,8 +111,9 @@
-             // 선택한 지역이 있을 경우 키워드에 해당 지역이름 넣기
-             if (selectedRegion != "") {
-                 keywordRegion = sharedSelectionViewModel.keywordRegions // ex) "서울 성동구|서울 종로구"
--                keywordRegion2 = keywordRegion.replace(" ","") // ex) "서울성동구|서울종로구"
--                regionList = keywordRegion.split("|").map{it.trim()}.toMutableList() //ex) [서울 성동구, 서울 종로구]
-+                keywordRegion2 = keywordRegion.replace(" ", "") // ex) "서울성동구|서울종로구"
-+                regionList = keywordRegion.split("|").map { it.trim() }
-+                    .toMutableList() //ex) [서울 성동구, 서울 종로구]
- 
-             }
- 
-@@ -124,12 +128,15 @@
-                 R.id.rb_e_1 -> {
-                     keywordEdu = "학력무관"
-                 }
-+
-                 R.id.rb_e_2 -> {
-                     keywordEdu = "고졸"
-                 }
-+
-                 R.id.rb_e_3 -> {
-                     keywordEdu = "대졸(2~3년)"
-                 }
-+
-                 R.id.rb_e_4 -> {
-                     keywordEdu = "대졸(4년)"
-                 }
-@@ -140,10 +147,12 @@
-                 R.id.rb_c_1 -> {
-                     keywordCareer = "관계없음"
-                 }
-+
-                 R.id.rb_c_2 -> {
-                     // 고등학교 졸 라디오 버튼이 선택되었을 때
-                     keywordCareer = "신입"
-                 }
-+
-                 R.id.rb_c_3 -> {
-                     // 대학(2년제) 라디오 버튼이 선택되었을 때
-                     keywordCareer = "경력"
-@@ -154,9 +163,11 @@
-                 R.id.rb_d_1 -> {
-                     keywordCloseDt = "7days"
-                 }
-+
-                 R.id.rb_d_2 -> {
-                     keywordCloseDt = "30days"
-                 }
-+
-                 R.id.rb_d_3 -> {
-                     keywordCloseDt = "60days"
-                 }
-@@ -207,8 +218,8 @@
-     private fun fetchWantedList() {
-         //네트워크 연결
-         val client = OkHttpClient()
--        if(keywordRegion2.contains("전체")){ // ex) 서울 전체인 경우 -> 서울로 변경
--            keywordRegion2.replace("전체","").trim()
-+        if (keywordRegion2.contains("전체")) { // ex) 서울 전체인 경우 -> 서울로 변경
-+            keywordRegion2.replace("전체", "").trim()
-         }
-         val request = Request.Builder()
-             .url("$baseUrl&startPage=$page&keyword=$keywordRegion2") // &keyword로 지역 1차 필터링하기 (이렇게 안하면 traffic 터져서 아무것도 안나옴)
-@@ -227,51 +238,73 @@
-                     result = parseXmlResponse(xmlString) // parsing한 후 리스트화 하기
-                     wantedList = result
- 
--                    // 지역 2차 필터링하기
--                    val filteredList = wantedList.filter { it.region?.trim() in regionList }
-+                    // 직종 XML 데이터 호출
-+                    val jobRequest = Request.Builder()
-+                        .url(jobUrl)
-+                        .build()
-+
-+                    client.newCall(jobRequest).enqueue(object : Callback {
-+                        override fun onFailure(call: Call, e: IOException) {
-+                            println(e.printStackTrace())
-+                        }
-+
-+                        @RequiresApi(Build.VERSION_CODES.O)
-+                        override fun onResponse(call: Call, jobResponse: Response) {
-+                            if (jobResponse.isSuccessful) {
-+                                val jobXmlString = jobResponse.body?.string()
-+                                // 파싱된 결과를 wantedList와 결합
-+                                val jobList = parseJobXmlResponse(jobXmlString)
-+
-+                                // 지역 2차 필터링하기
-+                                val filteredList =
-+                                    wantedList.filter { it.region?.trim() in regionList }
-+
-+                                val matchedSuperCds = jobList.filter { it.superCd == keywordJob }.map { it.jobsCd }.toSet()
- 
--                    if(keywordEdu =="" && keywordCareer == ""){ // 지역만 선택
--                        sharedSelectionViewModel.updateFilteredList(filteredList)
--                    }
--                    else if (keywordCareer.isNotEmpty() && keywordEdu == "") { // 경력만 선택
--                        val filteredList1 = filteredList.filter {// 경력 필터링
--                            it.career == keywordCareer
--                        }
--                        sharedSelectionViewModel.updateFilteredList(filteredList1)
--                    } else if (keywordEdu.isNotEmpty() && keywordCareer == "") { // 학력만 선택
--                        val filteredList1 = filteredList.filter { // 학력 필터링
--                            it.minEdubg == keywordEdu
--                        }
--                        sharedSelectionViewModel.updateFilteredList(filteredList1)
--                    } else if(keywordEdu.isNotEmpty()&&keywordCareer.isNotEmpty()){ // 경력, 학력 모두 선택
--                        val filteredList1 = filteredList.filter { // 경력, 학력 필터링
--                            it.minEdubg == keywordEdu && it.career == keywordCareer
--                        }
--                        sharedSelectionViewModel.updateFilteredList(filteredList1)
--                    }else if(keywordEdu =="" && keywordCareer == "" && keywordJob.isNotEmpty()){ //지역+직종
--                        val filteredList1 = wantedList.filter {
--                            it.jobsCd == keywordJob
--                        }
--                        sharedSelectionViewModel.updateFilteredList(filteredList1)
--                    }
--                    else if(keywordEdu =="" && keywordCareer.isNotEmpty() && keywordJob.isNotEmpty()){ //지역+직종+경력
--                        val filteredList1 = wantedList.filter {
--                            it.jobsCd == keywordJob && it.career == keywordCareer
--                        }
--                        sharedSelectionViewModel.updateFilteredList(filteredList1)
--                    }
--                    else if(keywordEdu.isNotEmpty() && keywordCareer =="" && keywordJob.isNotEmpty()){ //지역+직종+학력
--                        val filteredList1 = wantedList.filter {
--                            it.minEdubg == keywordEdu && it.jobsCd == keywordJob
--                        }
--                        sharedSelectionViewModel.updateFilteredList(filteredList1)
--                    }
--                    else { //지역+직종+경력+학력
--                        val filteredList1 = wantedList.filter {
--                            it.minEdubg == keywordEdu && it.career == keywordCareer && it.jobsCd == keywordJob
--                        }
--                        sharedSelectionViewModel.updateFilteredList(filteredList1)
--                    }
-+                                if (keywordEdu == "" && keywordCareer == "") { // 지역만 선택
-+                                    sharedSelectionViewModel.updateFilteredList(filteredList)
-+                                } else if (keywordCareer.isNotEmpty() && keywordEdu == "") { // 경력만 선택
-+                                    val filteredList1 = filteredList.filter {// 경력 필터링
-+                                        it.career == keywordCareer
-+                                    }
-+                                    sharedSelectionViewModel.updateFilteredList(filteredList1)
-+                                } else if (keywordEdu.isNotEmpty() && keywordCareer == "") { // 학력만 선택
-+                                    val filteredList1 = filteredList.filter { // 학력 필터링
-+                                        it.minEdubg == keywordEdu
-+                                    }
-+                                    sharedSelectionViewModel.updateFilteredList(filteredList1)
-+                                } else if (keywordEdu.isNotEmpty() && keywordCareer.isNotEmpty()) { // 경력, 학력 모두 선택
-+                                    val filteredList1 = filteredList.filter { // 경력, 학력 필터링
-+                                        it.minEdubg == keywordEdu && it.career == keywordCareer
-+                                    }
-+                                    sharedSelectionViewModel.updateFilteredList(filteredList1)
-+                                } else if (keywordEdu == "" && keywordCareer == "" && keywordJob.isNotEmpty()) { //지역+직종
-+                                    val filteredList1 = wantedList.filter {
-+                                        it.jobsCd in matchedSuperCds
-+                                    }
-+                                    sharedSelectionViewModel.updateFilteredList(filteredList1)
-+                                } else if (keywordEdu == "" && keywordCareer.isNotEmpty() && keywordJob.isNotEmpty()) { //지역+직종+경력
-+                                    val filteredList1 = wantedList.filter {
-+                                        (it.jobsCd in matchedSuperCds) && it.career == keywordCareer
-+                                    }
-+                                    sharedSelectionViewModel.updateFilteredList(filteredList1)
-+                                } else if (keywordEdu.isNotEmpty() && keywordCareer == "" && keywordJob.isNotEmpty()) { //지역+직종+학력
-+                                    val filteredList1 = wantedList.filter {
-+                                        it.minEdubg == keywordEdu && (it.jobsCd in matchedSuperCds)
-+                                    }
-+                                    sharedSelectionViewModel.updateFilteredList(filteredList1)
-+                                } else { //지역+직종+경력+학력
-+                                    val filteredList1 = wantedList.filter {
-+                                        it.minEdubg == keywordEdu && it.career == keywordCareer && (it.jobsCd in matchedSuperCds)
-+                                    }
-+                                    sharedSelectionViewModel.updateFilteredList(filteredList1)
-+                                }
-+                            } else {
-+                                // 두 번째 XML 데이터를 가져오는데 실패한 경우의 처리 로직
-+                                showErrorToast()
-+                            }
-+                        }
-+                    })
- 
-                     // 더 많은 페이지가 있는지 확인합니다.
-                     val factory = XmlPullParserFactory.newInstance()
-@@ -318,6 +351,10 @@
-         val jobsCd: String?,
-         val infoSvc: String?
-     )
-+data class Job(
-+    val jobsCd: String?,
-+    val superCd: String?
-+)
- 
-     private fun parseXmlResponse(xmlResponse: String?): List<Wanted> {
-         val wantedList = mutableListOf<Wanted>()
-@@ -357,6 +394,7 @@
-                         "infoSvc" -> infoSvc = xpp.nextText()
-                     }
-                 }
-+
-                 XmlPullParser.END_TAG -> {
-                     if (xpp.name == "wanted") {
-                         company?.let { c ->
-@@ -399,6 +437,41 @@
-         return wantedList
-     }
- 
-+    private fun parseJobXmlResponse(xmlResponse: String?): List<Job> {
-+        val jobList = mutableListOf<Job>()
-+        val factory = XmlPullParserFactory.newInstance()
-+        val xpp = factory.newPullParser()
-+        xpp.setInput(StringReader(xmlResponse))
-+
-+        var eventType = xpp.eventType
-+        var jobsCd: String? = null
-+        var superCd: String? = null
-+
-+        while (eventType != XmlPullParser.END_DOCUMENT) {
-+            when (eventType) {
-+                XmlPullParser.START_TAG -> {
-+                   when (xpp.name) {
-+                        "jobsCd" -> jobsCd = xpp.nextText()
-+                        "superCd" -> superCd = xpp.nextText()
-+                    }
-+                }
-+
-+                XmlPullParser.END_TAG -> {
-+                    if (xpp.name == "cmcdJobs") {  // 두 번째 XML 데이터의 항목의 끝 태그 이름
-+                        jobsCd?.let { jCd ->
-+                            superCd?.let { sCd ->
-+                                jobList.add(Job(jCd, sCd))
-+                            }
-+                        }
-+                        jobsCd = null
-+                        superCd = null
-+                    }
-+                }
-+            }
-+            eventType = xpp.next()
-+        }
-+        return jobList
-+    }
- 
-     private fun showErrorToast() {
-         Toast.makeText(requireContext(), "Failed to fetch wanted list.", Toast.LENGTH_SHORT).show()
-Index: app/src/main/java/com/example/a23_hf069/JobWorkNetSelectionFragment.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.a23_hf069\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.content.Intent\r\nimport android.graphics.Color\r\nimport android.os.Bundle\r\nimport android.util.Xml\r\nimport android.view.LayoutInflater\r\nimport android.view.MotionEvent\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.view.inputmethod.InputMethodManager\r\nimport android.widget.AdapterView\r\nimport android.widget.ArrayAdapter\r\nimport android.widget.ListView\r\nimport android.widget.Toast\r\nimport androidx.core.content.ContentProviderCompat.requireContext\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.fragment.app.activityViewModels\r\nimport com.example.a23_hf069.databinding.FragmentJobWorkNetSelectionBinding\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.GlobalScope\r\nimport kotlinx.coroutines.launch\r\nimport kotlinx.coroutines.withContext\r\nimport okhttp3.*\r\nimport org.w3c.dom.Element\r\nimport org.xml.sax.InputSource\r\nimport org.xmlpull.v1.XmlPullParser\r\nimport java.io.IOException\r\nimport java.io.StringReader\r\nimport java.util.Collections.addAll\r\nimport javax.xml.parsers.DocumentBuilderFactory\r\n\r\nclass JobWorkNetSelectionFragment : Fragment() {\r\n\r\n    private lateinit var binding: FragmentJobWorkNetSelectionBinding\r\n    private lateinit var jobAdapter: ArrayAdapter<String>\r\n    private lateinit var jobCodeList: MutableList<String> //직종코드를 담을 리스트\r\n    private lateinit var selectedJobList: MutableList<String> // 여러 개의 직종을 저장할 리스트\r\n\r\n    private lateinit var selectedJobCodeList: MutableList<String> // 여러 개의 직종코드를 저장할 리스트\r\n    private lateinit var combinedList: MutableList<String>\r\n\r\n    private lateinit var jobAdapter1: ArrayAdapter<String> // 대분류 지역 리스트뷰에 대한 어댑터\r\n    private lateinit var jobAdapter2: ArrayAdapter<String> // 중분류 지역 리스트뷰에 대한 어댑터\r\n\r\n    private lateinit var joblistView1: ListView // 대분류 직종 리스트뷰\r\n    private lateinit var joblistView2: ListView // 중분류 직종 리스트뷰\r\n\r\n    private val jobList1: MutableList<String> = mutableListOf() // 대분류 직종을 담을 리스트\r\n    private val jobList2: MutableList<String> = mutableListOf() // 중분류 직종을 담을 리스트\r\n\r\n    private var selectedMajorCode: String? = null\r\n    lateinit var selectedJob: String\r\n\r\n    // 클래스 내에 맵을 선언합니다.\r\n    private val majorToMiddleMap: MutableMap<String, List<String>> = mutableMapOf()\r\n\r\n\r\n    // ViewModel 생성\r\n    private val sharedSelectionViewModel: SharedSelectionViewModel by activityViewModels()\r\n\r\n    // 직업 목록을 불러오는 API의 기본 URL을 설정\r\n    private val baseUrl =\r\n        \"http://openapi.work.go.kr/opi/commonCode/commonCode.do?returnType=XML&target=CMCD&authKey=WNLJYZLM2VZXTT2TZA9XR2VR1HK&dtlGb=2\"\r\n\r\n    @SuppressLint(\"SuspiciousIndentation\")\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        binding = FragmentJobWorkNetSelectionBinding.inflate(inflater, container, false)\r\n        val rootView = binding.root\r\n\r\n        // View 초기화\r\n        val searchEditText = binding.tvSelectJob\r\n        //val jobListView = binding.listviewMajorCategory\r\n        val jobSelectButton = binding.btnJobSelectComplete\r\n\r\n        joblistView1 = binding.listviewMajorCategory\r\n        joblistView2 = binding.listviewMiddleCategory\r\n\r\n        selectedJobList = mutableListOf()\r\n        jobCodeList = mutableListOf()\r\n        selectedJobCodeList = mutableListOf()\r\n        combinedList = mutableListOf()\r\n\r\n        // ListView 초기화\r\n        jobAdapter1 = ArrayAdapter(requireContext(), android.R.layout.simple_list_item_1, jobList1)\r\n        jobAdapter2 = ArrayAdapter(requireContext(), android.R.layout.simple_list_item_1, jobList2)\r\n        joblistView1.adapter = jobAdapter1\r\n        joblistView2.adapter = jobAdapter2\r\n\r\n        selectedJob = sharedSelectionViewModel.selectedJob.toString() // ViewModel에서 선택된 직종 정보를 가져와서 TextView에 설정\r\n        binding.tvSelectedJob.text = selectedJob //화면에 textView 나타내기\r\n\r\n        fetchJobList() // 직업 목록 API 호출 및 결과 처리 함수를 호출\r\n\r\n\r\n        binding.btnMajorCategory.setOnClickListener {\r\n            selectedMajorCode = null // 선택된 대분류 초기화\r\n            joblistView1.visibility = View.VISIBLE\r\n            joblistView2.visibility = View.VISIBLE\r\n            binding.btnMajorCategory.setBackgroundColor(Color.parseColor(\"#35B891\"))\r\n            // 중분류 버튼을 안 보이도록 설정\r\n            binding.btnMiddleCategory.visibility = View.GONE\r\n\r\n            // 중분류 목록 초기화 및 갱신\r\n            jobList2.clear()\r\n            jobAdapter2.clear() // 중분류 어댑터에도 데이터를 클리어해야 함\r\n            jobAdapter2.addAll(jobList2) // 초기 중분류 목록을 추가\r\n            jobAdapter2.notifyDataSetChanged()\r\n\r\n        }\r\n\r\n\r\n        binding.btnMiddleCategory.setOnClickListener {\r\n            joblistView1.visibility = View.GONE\r\n            joblistView2.visibility = View.VISIBLE\r\n        }\r\n\r\n        // EditText을 클릭하면 검색 화면 JobWorkNetSelectionSearchFragment로 전환\r\n        searchEditText.setOnFocusChangeListener { _, hasFocus -> // EditText의 포커스 변화를 감지하는 리스너를 설정\r\n            if (hasFocus) {\r\n                val searchFragment = JobWorkNetSelectionSearchFragment()\r\n                requireActivity().supportFragmentManager.beginTransaction() // 프래그먼트 간 전환 수행\r\n                    .replace(R.id.fl_container, searchFragment) // 프래그먼트 교체\r\n                    .addToBackStack(null) // 이전 프래그먼트로 돌아가기\r\n                    .commit()\r\n                hideKeyboard() // 키보드 숨김 처리\r\n            }\r\n        }\r\n\r\n        joblistView1.setOnItemClickListener { _, _, position, _ ->\r\n            val selectedJob = jobList1[position]\r\n            val parts = selectedJob.split(\"-\")\r\n            if (parts.size == 2) {\r\n                selectedMajorCode = parts[1]\r\n                updateMiddleJobList(selectedJob) // 중분류 목록 업데이트\r\n                // 중분류 버튼 자동 클릭\r\n                binding.btnMiddleCategory.performClick()\r\n                // 중분류 버튼을 보이도록 설정\r\n                binding.btnMiddleCategory.visibility = View.VISIBLE\r\n                // 대분류 버튼 색상 변경\r\n                binding.btnMajorCategory.setBackgroundColor(resources.getColor(android.R.color.darker_gray))\r\n            }\r\n        }\r\n\r\n        // 중분류 직종 선택 시\r\n        joblistView2.setOnItemClickListener { _, _, position, _ ->\r\n            val selectedJob = jobList2[position]\r\n            if (selectedJob.contains(\"전체\")) {\r\n                handleAllMiddleJobs() // \"전체\" 선택 시 모든 중분류 아이템 처리\r\n            } else {\r\n                handleJobItemClick(selectedJob) // 일반적인 아이템 선택 시 처리\r\n            }\r\n        }\r\n\r\n        jobSelectButton.setOnClickListener {\r\n            val selectedJobs = selectedJobList.joinToString(\", \\n\")\r\n            sharedSelectionViewModel.selectedJob = selectedJobs // 선택된 직종 정보를 ViewModel에 저장\r\n            val selectedJobCodes=selectedJobCodeList.joinToString(\", \\n\")\r\n            sharedSelectionViewModel.selectedJobCode= selectedJobCodes //선택된 직종코드 정보를 viewModel에 저장\r\n\r\n            // Bundle을 생성하여 데이터 추가\r\n            val bundle = Bundle()\r\n            bundle.putString(\"selectedJobs\", selectedJobs)\r\n            bundle.putString(\"selectedJobCodes\", selectedJobCodes)\r\n\r\n            // 다음 프래그먼트 생성 및 데이터 전달\r\n            val wantedFilteringFragment = WantedFilteringFragment()\r\n            requireActivity().supportFragmentManager.beginTransaction()\r\n                .replace(R.id.fl_container, wantedFilteringFragment)\r\n                .addToBackStack(null)\r\n                .commit()\r\n            wantedFilteringFragment.arguments = bundle //뷰모델 사용x, bundle로 값넘겨줄때 필요한 코드\r\n        }\r\n\r\n        return rootView\r\n    }\r\n\r\n    // 선택된 직업 아이템을 처리하는 함수\r\n    private fun handleJobItemClick(selectedJobItem: String) {\r\n        val parts = selectedJobItem.split(\"-\")\r\n        if (parts.size == 2) {\r\n            val jobName = parts[0]\r\n            val jobCode = parts[1]\r\n\r\n            if (!selectedJobList.contains(jobName)) {\r\n                selectedJobList.add(jobName)\r\n                updateSelectedJobTextView()\r\n\r\n                selectedJobCodeList.add(jobCode)\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun handleAllMiddleJobs() {\r\n        val selectedMajorName = jobList1.find { it.split(\"-\")[1] == selectedMajorCode }?.split(\"-\")?.get(0) ?: \"\"\r\n        val majorCode = selectedMajorCode ?: \"\"\r\n\r\n        val allOption = \"${selectedMajorName} 전체\"\r\n\r\n        if (!selectedJobList.contains(allOption)) {\r\n            selectedJobList.add(allOption)\r\n            selectedJobCodeList.add(majorCode) // 선택된 대분류 직종 코드 추가\r\n            updateSelectedJobTextView()\r\n        }\r\n    }\r\n\r\n\r\n    // TextView 업데이트 함수 추가\r\n    private fun updateSelectedJobTextView() {\r\n        val selectedJobs = selectedJobList.joinToString(\", \\n\") // selectedJobList의 모든 항목을 하나의 문자열로 합침\r\n        binding.tvSelectedJob.text = selectedJobs // selectedJobs에서 만들어진 문자열을 tvSelectedJob의 텍스트로 설정하여 선택된 직종들을 화면에 표시\r\n    }\r\n\r\n    // 직업 목록을 서버로부터 가져오는 함수\r\n    private fun fetchJobList() {\r\n        val client = OkHttpClient()\r\n        val request = Request.Builder()\r\n            .url(baseUrl)\r\n            .build()\r\n\r\n        // 비동기적으로 API 요청을 수행하고 결과를 처리하는 콜백 등록\r\n        client.newCall(request).enqueue(object : Callback {\r\n            override fun onFailure(call: Call, e: IOException) {\r\n                // 네트워크 요청 실패 시 에러 토스트 메시지를 보여줌\r\n                showErrorToast()\r\n            }\r\n\r\n            override fun onResponse(call: Call, response: Response) {\r\n                if (response.isSuccessful) {\r\n                    // 응답이 성공적으로 도착한 경우, XML 형태의 데이터를 문자열로 변환하여 직업 목록 파싱\r\n                    val xmlString = response.body?.string()\r\n                    parseJobList(xmlString)\r\n                } else {\r\n                    // 응답이 실패한 경우 에러 토스트 메시지를 보여줌\r\n                    showErrorToast()\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    private fun parseJobList(xmlString: String?) {\r\n        GlobalScope.launch(Dispatchers.Main) {\r\n            val jobList1Temp = mutableListOf<String>()\r\n            val jobList2Temp = mutableListOf<String>()\r\n\r\n            val xmlPullParser: XmlPullParser = Xml.newPullParser()\r\n            xmlPullParser.setInput(StringReader(xmlString))\r\n\r\n            var eventType = xmlPullParser.eventType\r\n            var isOneDepth = false\r\n            var isTwoDepth = false\r\n            var isJobsNm = false\r\n            var jobsName = \"\"\r\n            var jobsCode = \"\"\r\n\r\n            while (eventType != XmlPullParser.END_DOCUMENT) {\r\n                when (eventType) {\r\n                    XmlPullParser.START_TAG -> {\r\n                        when (xmlPullParser.name) {\r\n                            \"oneDepth\" -> {\r\n                                isOneDepth = true\r\n                                isTwoDepth = false\r\n                            }\r\n                            \"twoDepth\" -> {\r\n                                isOneDepth = false\r\n                                isTwoDepth = true\r\n                            }\r\n                            \"jobsNm\" -> {\r\n                                isJobsNm = true\r\n                            }\r\n                            \"jobsCd\" -> {\r\n                                jobsCode = xmlPullParser.nextText().trim()\r\n                            }\r\n                        }\r\n                    }\r\n                    XmlPullParser.TEXT -> {\r\n                        if ((isOneDepth || isTwoDepth) && isJobsNm && xmlPullParser.text.trim().isNotEmpty()) {\r\n                            jobsName = xmlPullParser.text.trim().replace(\"-\", \"/\")\r\n                        }\r\n                    }\r\n                    XmlPullParser.END_TAG -> {\r\n                        if (isTwoDepth) {\r\n                            if (jobsName.isNotEmpty() && jobsCode.isNotEmpty()) {\r\n                                jobList2Temp.add(\"$jobsName-$jobsCode\")\r\n                            }\r\n                            isTwoDepth = false\r\n                        } else if (isOneDepth) {\r\n                            if (jobsName.isNotEmpty() && jobsCode.isNotEmpty()) {\r\n                                jobList1Temp.add(\"$jobsName-$jobsCode\")\r\n                            }\r\n                            isOneDepth = false\r\n                        }\r\n                        jobsName = \"\"\r\n                        jobsCode = \"\"\r\n                    }\r\n                }\r\n\r\n                eventType = xmlPullParser.next()\r\n            }\r\n\r\n            // 중분류 목록을 majorToMiddleMap에 저장합니다.\r\n            majorToMiddleMap.clear()\r\n            jobList1Temp.forEach { majorJob ->\r\n                val majorCode = majorJob.split(\"-\")[1]\r\n                val middleJobs = jobList2Temp.filter { it.contains(\"-$majorCode\") }\r\n                majorToMiddleMap[majorCode] = middleJobs\r\n            }\r\n\r\n            // 백그라운드 작업 결과를 UI 업데이트를 위한 메인 스레드 블록으로 전달\r\n            withContext(Dispatchers.Main) {\r\n                jobList1.clear()\r\n                jobList2.clear()\r\n                jobList1.addAll(jobList1Temp)\r\n                jobList2.addAll(jobList2Temp)\r\n                jobAdapter1.notifyDataSetChanged()\r\n                jobAdapter2.notifyDataSetChanged()\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private fun updateMiddleJobList(selectedJob: String) {\r\n        val parts = selectedJob.split(\"-\")\r\n        if (parts.size == 2) {\r\n            val selectedMajorCode = parts[1]\r\n\r\n            // 선택된 대분류 직종과 \"전체\" 옵션을 만듭니다.\r\n            val allOption = \"${parts[0]} 전체-$selectedMajorCode\"\r\n\r\n            // 선택된 대분류 직종과 관련된 중분류 직종 리스트를 가져옵니다.\r\n            val filteredMiddleJobs = majorToMiddleMap[selectedMajorCode] ?: emptyList()\r\n\r\n            // \"전체\" 옵션을 중분류 직종 리스트 맨 위에 추가하여 새로운 리스트를 생성합니다.\r\n            val updatedMiddleJobs = mutableListOf<String>().apply {\r\n                add(allOption)\r\n                addAll(filteredMiddleJobs)\r\n            }\r\n\r\n            // 중분류 리스트 어댑터를 갱신하여 변경된 리스트를 화면에 표시합니다.\r\n            jobAdapter2.clear()\r\n            jobAdapter2.addAll(updatedMiddleJobs)\r\n            jobAdapter2.notifyDataSetChanged()\r\n        }\r\n    }\r\n\r\n    private fun hideKeyboard() {\r\n        // 키보드 숨김 처리를 수행\r\n        val imm =\r\n            requireContext().getSystemService(android.content.Context.INPUT_METHOD_SERVICE) as InputMethodManager\r\n        imm.hideSoftInputFromWindow(view?.windowToken, 0)\r\n        view?.clearFocus()\r\n    }\r\n\r\n    // API 요청 실패 시 에러 메시지를 보여주는 함수\r\n    private fun showErrorToast() {\r\n        Toast.makeText(requireContext(), \"Failed to fetch job list.\", Toast.LENGTH_SHORT).show()\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/a23_hf069/JobWorkNetSelectionFragment.kt b/app/src/main/java/com/example/a23_hf069/JobWorkNetSelectionFragment.kt
---- a/app/src/main/java/com/example/a23_hf069/JobWorkNetSelectionFragment.kt	(revision 6761cae6ff513e9a2e0aca489564906d26148c34)
-+++ b/app/src/main/java/com/example/a23_hf069/JobWorkNetSelectionFragment.kt	(date 1692797508670)
-@@ -63,7 +63,6 @@
-     // 직업 목록을 불러오는 API의 기본 URL을 설정
-     private val baseUrl =
-         "http://openapi.work.go.kr/opi/commonCode/commonCode.do?returnType=XML&target=CMCD&authKey=WNLJYZLM2VZXTT2TZA9XR2VR1HK&dtlGb=2"
--
-     @SuppressLint("SuspiciousIndentation")
-     override fun onCreateView(
-         inflater: LayoutInflater, container: ViewGroup?,
-@@ -159,12 +158,13 @@
-         jobSelectButton.setOnClickListener {
-             val selectedJobs = selectedJobList.joinToString(", \n")
-             sharedSelectionViewModel.selectedJob = selectedJobs // 선택된 직종 정보를 ViewModel에 저장
--            val selectedJobCodes=selectedJobCodeList.joinToString(", \n")
--            sharedSelectionViewModel.selectedJobCode= selectedJobCodes //선택된 직종코드 정보를 viewModel에 저장
-+            val selectedJobCodes = selectedJobCodeList.joinToString(",")
-+            sharedSelectionViewModel.selectedJobCode = selectedJobCodes //선택된 직종코드 정보를 viewModel에 저장
-+            //채용공고는 소분류로 이루어져있음
-+            //필터링시에는 superCd에 해당하는 채용공고들을 호출
- 
-             // Bundle을 생성하여 데이터 추가
-             val bundle = Bundle()
--            bundle.putString("selectedJobs", selectedJobs)
-             bundle.putString("selectedJobCodes", selectedJobCodes)
- 
-             // 다음 프래그먼트 생성 및 데이터 전달
-@@ -294,6 +294,7 @@
-                             }
-                             isOneDepth = false
-                         }
-+
-                         jobsName = ""
-                         jobsCode = ""
-                     }
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" project-jdk-name=\"jbr-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/misc.xml b/.idea/misc.xml
---- a/.idea/misc.xml	(revision 6761cae6ff513e9a2e0aca489564906d26148c34)
-+++ b/.idea/misc.xml	(date 1692933812177)
-@@ -1,4 +1,3 @@
--<?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-   <component name="ExternalStorageConfigurationManager" enabled="true" />
-   <component name="ProjectRootManager" version="2" languageLevel="JDK_17" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">23_HF069</string>\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n    <string name=\"title_activity_login_test\">loginTest</string>\r\n    <string name=\"tab_text_1\">Tab 1</string>\r\n    <string name=\"tab_text_2\">Tab 2</string>\r\n\r\n    <!-- 필수입력 요청 parameter -->\r\n    <!-- (인증키, callTp=L(호출할 페이지 타입=목록), returnType=xml, startPage=1, display=출력건수(기본값10~최대100)) -->\r\n    <string name=\"wanted_url\">http://openapi.work.go.kr/opi/opi/opia/wantedApi.do?authKey=WNLJYZLM2VZXTT2TZA9XR2VR1HK&amp;callTp=L&amp;returnType=XML&amp;startPage=1&amp;display=10</string>\r\n    <string name=\"region_url\">http://openapi.work.go.kr/opi/commonCode/commonCode.do?returnType=XML&amp;target=CMCD&amp;authKey=WNLJYZLM2VZXTT2TZA9XR2VR1HK&amp;dtlGb=1</string>\r\n    <string name=\"jobs_url\">http://openapi.work.go.kr/opi/commonCode/commonCode.do?returnType=XML&amp;target=CMCD&amp;authKey=WNLJYZLM2VZXTT2TZA9XR2VR1HK&amp;dtlGb=2</string>\r\n    <string name=\"title_activity_resume_check\">ResumeCheckActivity</string>\r\n    <string name=\"title_activity_find_id\">FindIdActivity</string>\r\n\r\n    <!-- 검색 필터링 조건 = 직종, 지역, 학력, 경력 -->\r\n    <!-- 다중검색 가능 요청 parameter = region(지역), occupation(직종) -->\r\n</resources>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision 04029e6fa85e9d7c858ccc3d8a64c60c8adfa502)
+++ b/app/src/main/res/values/strings.xml	(date 1693400296738)
@@ -12,6 +12,8 @@
     <string name="jobs_url">http://openapi.work.go.kr/opi/commonCode/commonCode.do?returnType=XML&amp;target=CMCD&amp;authKey=WNLJYZLM2VZXTT2TZA9XR2VR1HK&amp;dtlGb=2</string>
     <string name="title_activity_resume_check">ResumeCheckActivity</string>
     <string name="title_activity_find_id">FindIdActivity</string>
+    <string name="title_activity_main2">MainActivity2</string>
+    <string name="title_activity_resume_career">ResumeCareerActivity</string>
 
     <!-- 검색 필터링 조건 = 직종, 지역, 학력, 경력 -->
     <!-- 다중검색 가능 요청 parameter = region(지역), occupation(직종) -->
Index: app/src/main/java/com/example/a23_hf069/RecruitCareerActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/a23_hf069/RecruitCareerActivity.kt b/app/src/main/java/com/example/a23_hf069/RecruitCareerActivity.kt
new file mode 100644
--- /dev/null	(date 1693400296893)
+++ b/app/src/main/java/com/example/a23_hf069/RecruitCareerActivity.kt	(date 1693400296893)
@@ -0,0 +1,46 @@
+package com.example.a23_hf069
+
+import android.os.Bundle
+import androidx.activity.ComponentActivity
+import androidx.activity.compose.setContent
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.material3.MaterialTheme
+import androidx.compose.material3.Surface
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.tooling.preview.Preview
+import com.example.a23_hf069.ui.theme._23_HF069Theme
+
+class ResumeCareerActivity : ComponentActivity() {
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContent {
+            _23_HF069Theme {
+                // A surface container using the 'background' color from the theme
+                Surface(
+                    modifier = Modifier.fillMaxSize(),
+                    color = MaterialTheme.colorScheme.background
+                ) {
+                    Greeting2("Android")
+                }
+            }
+        }
+    }
+}
+
+@Composable
+fun Greeting2(name: String, modifier: Modifier = Modifier) {
+    Text(
+        text = "Hello $name!",
+        modifier = modifier
+    )
+}
+
+@Preview(showBackground = true)
+@Composable
+fun GreetingPreview2() {
+    _23_HF069Theme {
+        Greeting2("Android")
+    }
+}
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'org.jetbrains.kotlin.android'\r\n\r\n    // Add the Google services Gradle plugin\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    compileSdk 33\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.a23_hf069\"\r\n        minSdk 24\r\n        targetSdk 33\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    buildFeatures {\r\n        // 뷰 바인딩 활성화\r\n        viewBinding = true\r\n        // 데이터 바인딩 활성화\r\n        dataBinding = true\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation 'com.google.code.gson:gson:2.8.8'\r\n\r\n    implementation 'androidx.core:core-ktx:1.6.0'\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.3.1'\r\n\r\n    implementation 'com.google.android.material:material:1.6.0'\r\n\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'\r\n\r\n    testImplementation 'junit:junit:4.+'\r\n\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    implementation 'androidx.preference:preference-ktx:1.1.1'\r\n\r\n    //tablayout\r\n    implementation 'com.google.android.material:material:1.3.0-alpha01'\r\n    // fragment\r\n    implementation(\"androidx.fragment:fragment-ktx:1.3.6\")\r\n\r\n    implementation 'com.squareup.okhttp3:okhttp:4.9.1'\r\n\r\n\r\n    /*채용공고필요추가*/\r\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\r\n    //필터링\r\n    implementation 'com.github.kittinunf.fuel:fuel:2.3.1'\r\n    implementation \"com.squareup.okhttp3:okhttp:4.9.2\"\r\n    implementation \"org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.1\"\r\n\r\n    /*웹뷰*/\r\n    implementation 'androidx.webkit:webkit:1.4.0'\r\n\r\n    //데이터바인딩\r\n    implementation \"androidx.databinding:databinding-runtime:3.5.0\"\r\n\r\n    // 코루틴 라이브러리\r\n    implementation \"org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9\"\r\n    implementation \"org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9\"\r\n\r\n    implementation \"com.squareup.okhttp3:okhttp:4.9.1\"\r\n\r\n\r\n    // Import the BoM for the Firebase platform\r\n    implementation(platform(\"com.google.firebase:firebase-bom:32.2.2\"))\r\n\r\n    // When using the BoM, don't specify versions in Firebase dependencies\r\n    implementation 'com.google.firebase:firebase-analytics-ktx'\r\n\r\n    // Add dependencies for any other desired Firebase products\r\n    // https://firebase.google.com/docs/android/setup#available-libraries\r\n\r\n    // Retrofit 라이브러리 추가\r\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.'\r\n\r\n    // amazon ses 설정\r\n    implementation 'com.amazonaws:aws-android-sdk-ses:2.73.0'  // AWS SES 라이브러리\r\n    implementation 'com.amazonaws:aws-android-sdk-core:2.73.0' // AWS Core 라이브러리\r\n    // 원 형태 편집\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n\r\n}\r\n\r\n// Kotlin Android Extensions 플러그인 적용\r\n//apply plugin: 'kotlin-android-extensions'\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 04029e6fa85e9d7c858ccc3d8a64c60c8adfa502)
+++ b/app/build.gradle	(date 1693400296819)
@@ -17,6 +17,9 @@
         versionName "1.0"
 
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
+        vectorDrawables {
+            useSupportLibrary true
+        }
     }
 
     buildTypes {
@@ -30,6 +33,7 @@
         viewBinding = true
         // 데이터 바인딩 활성화
         dataBinding = true
+        compose true
     }
 
     compileOptions {
@@ -39,6 +43,15 @@
     kotlinOptions {
         jvmTarget = '1.8'
     }
+    namespace 'com.example.a23_hf069'
+    composeOptions {
+        kotlinCompilerExtensionVersion '1.4.3'
+    }
+    packagingOptions {
+        resources {
+            excludes += '/META-INF/{AL2.0,LGPL2.1}'
+        }
+    }
 }
 
 dependencies {
@@ -53,6 +66,14 @@
     implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
     implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
     implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
+    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
+    implementation 'androidx.activity:activity-compose:1.7.2'
+    implementation platform('androidx.compose:compose-bom:2023.03.00')
+    implementation 'androidx.compose.ui:ui'
+    implementation 'androidx.compose.ui:ui-graphics'
+    implementation 'androidx.compose.ui:ui-tooling-preview'
+    implementation 'androidx.compose.material3:material3'
+    implementation platform('androidx.compose:compose-bom:2023.03.00')
 
     testImplementation 'junit:junit:4.+'
 
@@ -109,6 +130,11 @@
     implementation 'com.amazonaws:aws-android-sdk-core:2.73.0' // AWS Core 라이브러리
     // 원 형태 편집
     implementation 'de.hdodenhof:circleimageview:3.1.0'
+    androidTestImplementation platform('androidx.compose:compose-bom:2023.03.00')
+    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
+    androidTestImplementation platform('androidx.compose:compose-bom:2023.03.00')
+    debugImplementation 'androidx.compose.ui:ui-tooling'
+    debugImplementation 'androidx.compose.ui:ui-test-manifest'
 
 }
 
Index: app/google-services.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"project_info\": {\r\n    \"project_number\": \"690907773251\",\r\n    \"project_id\": \"keepwork-c58a3\",\r\n    \"storage_bucket\": \"keepwork-c58a3.appspot.com\"\r\n  },\r\n  \"client\": [\r\n    {\r\n      \"client_info\": {\r\n        \"mobilesdk_app_id\": \"1:690907773251:android:d80dc5ed36dd92b0c157f6\",\r\n        \"android_client_info\": {\r\n          \"package_name\": \"com.example.a23_hf069\"\r\n        }\r\n      },\r\n      \"oauth_client\": [\r\n        {\r\n          \"client_id\": \"690907773251-lsoc0e0vchbq076r29cedmsapbfhn9e8.apps.googleusercontent.com\",\r\n          \"client_type\": 3\r\n        }\r\n      ],\r\n      \"api_key\": [\r\n        {\r\n          \"current_key\": \"AIzaSyCAIWgNEMOuuEl9Lgd60dkkLjlEspO_Cjo\"\r\n        }\r\n      ],\r\n      \"services\": {\r\n        \"appinvite_service\": {\r\n          \"other_platform_oauth_client\": [\r\n            {\r\n              \"client_id\": \"690907773251-lsoc0e0vchbq076r29cedmsapbfhn9e8.apps.googleusercontent.com\",\r\n              \"client_type\": 3\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  \"configuration_version\": \"1\"\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/google-services.json b/app/google-services.json
--- a/app/google-services.json	(revision 04029e6fa85e9d7c858ccc3d8a64c60c8adfa502)
+++ b/app/google-services.json	(date 1693318140678)
@@ -1,33 +1,78 @@
 {
   "project_info": {
-    "project_number": "690907773251",
-    "project_id": "keepwork-c58a3",
-    "storage_bucket": "keepwork-c58a3.appspot.com"
+    "project_number": "617733453211",
+    "project_id": "cookie-parkmoon",
+    "storage_bucket": "cookie-parkmoon.appspot.com"
   },
   "client": [
     {
       "client_info": {
-        "mobilesdk_app_id": "1:690907773251:android:d80dc5ed36dd92b0c157f6",
+        "mobilesdk_app_id": "1:617733453211:android:8062fa837ebc0749b3dd3e",
         "android_client_info": {
           "package_name": "com.example.a23_hf069"
         }
       },
       "oauth_client": [
         {
-          "client_id": "690907773251-lsoc0e0vchbq076r29cedmsapbfhn9e8.apps.googleusercontent.com",
+          "client_id": "617733453211-kkvujlr9puitvthp0v0nq2m29e39e3ud.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.example.a23_hf069",
+            "certificate_hash": "32299286b90a85872994c15e1ecb55a677aae598"
+          }
+        },
+        {
+          "client_id": "617733453211-8tqctco7ahi8bns2ra9g4fvgn2rs4kod.apps.googleusercontent.com",
           "client_type": 3
         }
       ],
       "api_key": [
         {
-          "current_key": "AIzaSyCAIWgNEMOuuEl9Lgd60dkkLjlEspO_Cjo"
+          "current_key": "AIzaSyBt09j-VA-EY6TlOBN7Tk7XzV1617pnWc4"
         }
       ],
       "services": {
         "appinvite_service": {
           "other_platform_oauth_client": [
             {
-              "client_id": "690907773251-lsoc0e0vchbq076r29cedmsapbfhn9e8.apps.googleusercontent.com",
+              "client_id": "617733453211-8tqctco7ahi8bns2ra9g4fvgn2rs4kod.apps.googleusercontent.com",
+              "client_type": 3
+            }
+          ]
+        }
+      }
+    },
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:617733453211:android:5dc0d876083dd277b3dd3e",
+        "android_client_info": {
+          "package_name": "com.example.cookie"
+        }
+      },
+      "oauth_client": [
+        {
+          "client_id": "617733453211-p5cb9bk44njo8emhv1cbk2hvh8nstiqv.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.example.cookie",
+            "certificate_hash": "b064e906d18bc7848cbae05e4d4772f633c76917"
+          }
+        },
+        {
+          "client_id": "617733453211-8tqctco7ahi8bns2ra9g4fvgn2rs4kod.apps.googleusercontent.com",
+          "client_type": 3
+        }
+      ],
+      "api_key": [
+        {
+          "current_key": "AIzaSyBt09j-VA-EY6TlOBN7Tk7XzV1617pnWc4"
+        }
+      ],
+      "services": {
+        "appinvite_service": {
+          "other_platform_oauth_client": [
+            {
+              "client_id": "617733453211-8tqctco7ahi8bns2ra9g4fvgn2rs4kod.apps.googleusercontent.com",
               "client_type": 3
             }
           ]
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nplugins {\r\n    id 'com.android.application' version '7.3.1' apply false\r\n    id 'com.android.library' version '7.3.1' apply false\r\n    id 'org.jetbrains.kotlin.android' version '1.8.10' apply false\r\n    id 'com.google.gms.google-services' version '4.3.15' apply false\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 04029e6fa85e9d7c858ccc3d8a64c60c8adfa502)
+++ b/build.gradle	(date 1693318185736)
@@ -1,7 +1,7 @@
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
 plugins {
-    id 'com.android.application' version '7.3.1' apply false
-    id 'com.android.library' version '7.3.1' apply false
+    id 'com.android.application' version '7.4.2' apply false
+    id 'com.android.library' version '7.4.2' apply false
     id 'org.jetbrains.kotlin.android' version '1.8.10' apply false
     id 'com.google.gms.google-services' version '4.3.15' apply false
 }
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Thu Jun 01 23:55:54 KST 2023\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-7.4-bin.zip\r\ndistributionPath=wrapper/dists\r\nzipStorePath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
--- a/gradle/wrapper/gradle-wrapper.properties	(revision 04029e6fa85e9d7c858ccc3d8a64c60c8adfa502)
+++ b/gradle/wrapper/gradle-wrapper.properties	(date 1693318185742)
@@ -1,6 +1,6 @@
 #Thu Jun 01 23:55:54 KST 2023
 distributionBase=GRADLE_USER_HOME
-distributionUrl=https\://services.gradle.org/distributions/gradle-7.4-bin.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-7.5-bin.zip
 distributionPath=wrapper/dists
 zipStorePath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
